defaults: &defaults

  working_directory: /home/circleci/repo
  
  environment:
  - AWS_DEFAULT_REGION: eu-west-3
  - MAVEN_OPTS: -Xmx2800m
  
  docker:
  - image: cimg/openjdk:21.0
  
version: 2.1
orbs:
  aws-cli: circleci/aws-cli@5.0.0
jobs:
  build_engine_jar:
    <<: *defaults
    
    steps:
    
#     - restore_cache:
#         keys:
#         - v1-git-{{ .Branch }}-{{ .Environment.CIRCLE_TAG }}-{{ .Revision }}
#         - v1-git-{{ .Branch }}-{{ .Environment.CIRCLE_TAG }}-
        
    - checkout
    
#     - save_cache:
#         paths:
#         - .git
#         key: v1-git-{{ .Branch }}-{{ .Environment.CIRCLE_TAG }}-{{ .Revision }}
        
    - restore_cache:
        keys:
        - v3-dependencies-studio-{{ checksum "build.gradle" }}-{{ checksum ".circleci/config.yml" }}
        - v3-dependencies-{{ checksum "build.gradle" }}-{{ checksum ".circleci/config.yml" }}
        - v3-dependencies-
        
    - restore_cache:
        keys:
        - v3-build-cache-{{ .Revision }}
        - v3-build-cache-
        
    - run:
        name: Prepare build.env
        command: |
          export CONVERTIGO_VERSION_NUMBER=$(sed -n "s/ext.convertigoVersion = '\(.*\)'/\\1/p" build.gradle)
          export CONVERTIGO_MAJOR=$(echo $CONVERTIGO_VERSION_NUMBER | sed -e "s,\([0-9]\+\\.[0-9]\+\)\\..*,\\1,")
          export CONVERTIGO_VERSION_TAG=$(sed -n "s/ext.convertigoTag = '\(.*\)'/\\1/p" build.gradle)
          if [ "$CONVERTIGO_VERSION_TAG" = "" ] ; then
            export CONVERTIGO_VERSION=$CONVERTIGO_VERSION_NUMBER
          else
            export CONVERTIGO_VERSION=$CONVERTIGO_VERSION_NUMBER-$CONVERTIGO_VERSION_TAG
          fi
          export CONVERTIGO_BUILD_NUM=$(printf '%05d' $CIRCLE_BUILD_NUM)
          if [ "$CIRCLE_BRANCH" = "" ] ; then
            export CONVERTIGO_BUILD_NAME=$CONVERTIGO_BUILD_NUM-$CIRCLE_TAG
            export CONVERTIGO_DOCKER_IMAGE=$CIRCLE_TAG
            export CONVERTIGO_DOCKER=convertigo/convertigo
            if [[ "$CIRCLE_TAG" =~ [a-zA-Z] ]] ; then
              export CONVERTIGO_BRANCH=""
            else
              export CONVERTIGO_BRANCH=latest
            fi
          else
            export CONVERTIGO_BRANCH=$(echo $CIRCLE_BRANCH | sed "s,/,-,")
            export CONVERTIGO_BUILD_NAME=$CONVERTIGO_BUILD_NUM-$CONVERTIGO_BRANCH-$CONVERTIGO_VERSION
            export CONVERTIGO_DOCKER_IMAGE=$CONVERTIGO_BUILD_NUM-$CONVERTIGO_BRANCH-$CONVERTIGO_VERSION
            export CONVERTIGO_DOCKER=convertigo/convertigo-ci
          fi
          export CONVERTIGO_URL=https://convertigo-ci.s3-eu-west-3.amazonaws.com/convertigo-$CONVERTIGO_BUILD_NAME
          mkdir -p ~/s3/convertigo-$CONVERTIGO_BUILD_NAME
          export CONVERTIGO_DIST=$(cd ~/s3/convertigo-$CONVERTIGO_BUILD_NAME; pwd)
          
          export echo DATE=$(date)
          
          env | grep -e "^CIRCLE" -e "^CONVERTIGO_" -e "^DATE=" | sort > $CONVERTIGO_DIST/env.txt
          env | grep -e "^CONVERTIGO_" -e "^DATE=" | sed -e "s, ,\\\\ ,g" > /tmp/build.env
          
          echo "/tmp/build.env: "
          cat /tmp/build.env
          
    - save_cache:
        paths:
        - /tmp/build.env
        key: v1-build-env-{{ .Environment.CIRCLE_WORKFLOW_ID }}
        
    - add_ssh_keys:
        fingerprints:
        - "0f:4a:26:54:4c:1d:13:d5:4a:40:08:b8:35:a7:5d:34"
        
    - run:
        name: Clone convertigo-doc
        command: |
          source /tmp/build.env
          if [ "$CIRCLE_BRANCH" != "" ] ; then
          git clone --depth 1 -b $CIRCLE_BRANCH --single-branch git@github.com:convertigo/convertigo-doc.git || NOCLONE=true
          if [ "$NOCLONE" = true ]; then
            git clone --depth 1 -b develop --single-branch git@github.com:convertigo/convertigo-doc.git
            (cd convertigo-doc && git checkout -b $CIRCLE_BRANCH --track)
          fi
          else
            echo "No documentation for tag build"
          fi
        
    - run:
        name: Build engine.jar and documentation's .md
        command: |
          source /tmp/build.env
          test -d ~/.gradle/caches && find ~/.gradle/caches -name "*-SNAPSHOT" -exec rm -rf {} +
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          if [ "$CIRCLE_BRANCH" == "" ] ; then
            sh gradlew --info --stacktrace $M2_ARGS -PconvertigoRevision=$CONVERTIGO_BUILD_NAME :ciFirstStep
          else
            sh gradlew --info --stacktrace $M2_ARGS -PconvertigoRevision=$CONVERTIGO_BUILD_NAME -PdocumentationPath=$PWD/convertigo-doc :engine:generateDocumentationMd :ciFirstStep
          fi
        
    - run:
        name: Push to convertigo-doc
        command: |
          source /tmp/build.env
          if [ "$CIRCLE_BRANCH" != "" ] ; then
          cd convertigo-doc
          git config --global user.email "info@convertigo.com"
          git config --global user.name "$CIRCLE_PROJECT_USERNAME"
          git add .
          git commit -a -m "Automatic commit from $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME@$CIRCLE_SHA1" || echo "Nothing to commit"
          git push origin $CIRCLE_BRANCH || echo "Nothing to push"
          else
            echo "No documentation for tag build"
          fi
          
    - save_cache:
        paths:
          - ~/.gradle
          - .gradle
        key: v3-dependencies-{{ checksum "build.gradle" }}-{{ checksum ".circleci/config.yml" }}
        
    - save_cache:
        paths:
        - ~/.gradle/caches/build-cache-1
        key: v3-build-cache-{{ .Revision }}
    
    - run:
        name: Clean workspace before saving
        command: rm -rf .git convertigo-doc gradle-plugin
    
    - store_artifacts:
        path: /home/circleci/s3
        destination: env
    
    - persist_to_workspace:
        root: ..
        paths:
        - .
        
  build_engine_war:
    <<: *defaults
    
    steps:
    - aws-cli/setup
    
    - attach_workspace:
        at: ..
        
    - restore_cache:
        keys:
        - v1-build-env-{{ .Environment.CIRCLE_WORKFLOW_ID }}
        
    - restore_cache:
        keys:
        - v1-resources-{{ checksum "build.gradle" }}-{{ checksum ".circleci/config.yml" }}
        - v1-resources-
        
    - run:
        name: Make WARs
        command: |
          source /tmp/build.env
          sh gradlew --info --stacktrace -PconvertigoRevision=$CONVERTIGO_BUILD_NAME :engine:war
          mv engine/build/libs/*.war $CONVERTIGO_DIST/
          
    - save_cache:
        paths:
        - resources
        key: v1-resources-{{ checksum "build.gradle" }}-{{ checksum ".circleci/config.yml" }}
        
    - save_cache:
        paths:
        - docker
        key: v1-docker-{{ .Environment.CIRCLE_WORKFLOW_ID }}
        
    - run:
        name: Sign WARs with GPG
        command: |
          source /tmp/build.env
          openssl enc -aes-256-cbc -d -md md5 -in installers/convertigo.gpg.aes -out installers/convertigo.gpg -k $PFX_AES
          mkdir -p ~/.gnupg
          tar -xvf installers/convertigo.gpg -C ~/.gnupg
          find $CONVERTIGO_DIST -type f -name "*.war" -exec gpg -ab {} \;
          
    - run:
        name: Sync WARs to S3
        command: |
          source /tmp/build.env
          aws s3 sync --acl public-read ~/s3 s3://convertigo-ci/
          for folder in $(aws s3 ls s3://convertigo-ci/ | grep convertigo- | head -n -36 | sed "s/ *PRE //"); do
            aws s3 rm s3://convertigo-ci/${folder} --recursive
          done
          
  build_windows_server:
    <<: *defaults
    
    steps:
    - aws-cli/setup
    
    - attach_workspace:
        at: ..
        
    - restore_cache:
        keys:
        - v1-build-env-{{ .Environment.CIRCLE_WORKFLOW_ID }}
        
    - restore_cache:
        keys:
        - v1-resources-{{ checksum "build.gradle" }}-{{ checksum ".circleci/config.yml" }}
        - v1-resources-
        
    - run:
        name: Make ZIP
        command: |
          source /tmp/build.env
          aws s3 cp s3://convertigo-ci/convertigo-$CONVERTIGO_BUILD_NAME/convertigo-$CONVERTIGO_VERSION.war engine/build/libs/
          sh gradlew --info --stacktrace -PconvertigoRevision=$CONVERTIGO_BUILD_NAME :makeWin64ServerZip
          mv build/*.zip $CONVERTIGO_DIST/
          
    - save_cache:
        paths:
        - resources
        key: v1-resources-{{ checksum "build.gradle" }}-{{ checksum ".circleci/config.yml" }}
        
    - run:
        name: Sign ZIP with GPG
        command: |
          source /tmp/build.env
          openssl enc -aes-256-cbc -d -md md5 -in installers/convertigo.gpg.aes -out installers/convertigo.gpg -k $PFX_AES
          mkdir -p ~/.gnupg
          tar -xvf installers/convertigo.gpg -C ~/.gnupg
          find $CONVERTIGO_DIST -type f -name "*.zip" -exec gpg -ab {} \;
          
    - run:
        name: Sync ZIP to S3
        command: |
          source /tmp/build.env
          aws s3 sync --storage-class REDUCED_REDUNDANCY --acl public-read $CONVERTIGO_DIST/.. s3://convertigo-ci/
          
  build_docker_default:
    <<: *defaults
    
    docker:
    - image: docker:latest
    
    steps:
    
    - restore_cache:
        keys:
        - v1-docker-{{ .Environment.CIRCLE_WORKFLOW_ID }}
        
    - restore_cache:
        keys:
        - v1-build-env-{{ .Environment.CIRCLE_WORKFLOW_ID }}
        
    - setup_remote_docker:
        version: default
    
    - run:
        name: Docker build and push for default
        command: |
          source /tmp/build.env
          export TYPE=default
          cd docker/$TYPE
          export CONVERTIGO_WAR_URL=$CONVERTIGO_URL/convertigo-$CONVERTIGO_VERSION.war
          echo "CONVERTIGO_WAR_URL=$CONVERTIGO_WAR_URL"
          sed -e "s,ENV CONVERTIGO_WAR_URL .*,ENV CONVERTIGO_WAR_URL $CONVERTIGO_WAR_URL," -i.bak Dockerfile
          echo "$DOCKER_PASSWORD" | docker login -u="$DOCKER_USERNAME" --password-stdin
          docker buildx create --use
          docker buildx build --progress plain --push -t $CONVERTIGO_DOCKER:$CONVERTIGO_DOCKER_IMAGE --provenance=mode=max --sbom=true --platform linux/amd64,linux/arm64/v8 .
          if [ "$CONVERTIGO_BRANCH" != "" ] ; then
            docker buildx build --progress plain --push -t $CONVERTIGO_DOCKER:$CONVERTIGO_BRANCH --provenance=mode=max --sbom=true --platform linux/amd64,linux/arm64/v8 .
          fi
          if [ "$CONVERTIGO_BRANCH" = "develop" ] || [ "$CONVERTIGO_BRANCH" = "latest" ]; then
            docker buildx build --progress plain --push -t $CONVERTIGO_DOCKER:$CONVERTIGO_VERSION --provenance=mode=max --sbom=true --platform linux/amd64,linux/arm64/v8 .
          fi
          
  build_docker_aks:
    <<: *defaults
    
    docker:
    - image: docker:latest
    
    steps:
    
    - restore_cache:
        keys:
        - v1-docker-{{ .Environment.CIRCLE_WORKFLOW_ID }}
        
    - restore_cache:
        keys:
        - v1-build-env-{{ .Environment.CIRCLE_WORKFLOW_ID }}
        
    - setup_remote_docker:
        version: default
    
    - run:
        name: Docker build and push for aks
        command: |
          source /tmp/build.env
          export TYPE=aks
          cd docker/$TYPE
          export CONVERTIGO_WAR_URL=$CONVERTIGO_URL/convertigo-$CONVERTIGO_VERSION.war
          echo "CONVERTIGO_WAR_URL=$CONVERTIGO_WAR_URL"
          sed -e "s,ENV CONVERTIGO_WAR_URL .*,ENV CONVERTIGO_WAR_URL $CONVERTIGO_WAR_URL," -i.bak Dockerfile
          echo "$DOCKER_PASSWORD" | docker login -u="$DOCKER_USERNAME" --password-stdin
          docker build --rm=false -t $CONVERTIGO_DOCKER:$CONVERTIGO_DOCKER_IMAGE-$TYPE .
          docker push $CONVERTIGO_DOCKER:$CONVERTIGO_DOCKER_IMAGE-$TYPE
          if [ "$CONVERTIGO_BRANCH" != "" ] ; then
            docker tag $CONVERTIGO_DOCKER:$CONVERTIGO_DOCKER_IMAGE-$TYPE $CONVERTIGO_DOCKER:$CONVERTIGO_BRANCH-$TYPE
            docker push $CONVERTIGO_DOCKER:$CONVERTIGO_BRANCH-$TYPE
          fi
          if [ "$CONVERTIGO_BRANCH" = "develop" ] || [ "$CONVERTIGO_BRANCH" = "latest" ]; then
            docker tag $CONVERTIGO_DOCKER:$CONVERTIGO_BRANCH-$TYPE $CONVERTIGO_DOCKER:$CONVERTIGO_VERSION-$TYPE
            docker push $CONVERTIGO_DOCKER:$CONVERTIGO_VERSION-$TYPE
          fi
          
          if [ "$CONVERTIGO_BRANCH" = "develop" ]; then
          	docker run --rm alpine/curl -m 30 "$BETA_KILL_URL"
          fi
          
  qualif_jmx_1:
    <<: *defaults
    steps:
    - aws-cli/setup
    
    - restore_cache:
        keys:
        - v1-build-env-{{ .Environment.CIRCLE_WORKFLOW_ID }}
        
    - setup_remote_docker:
        version: default
    
    - run:
        name: Checkout the qualif-jmx-1 project
        command: |
          ssh-keyscan bitbucket.org >> ~/.ssh/known_hosts
          echo -e "Host bitbucket.org\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
          git clone --depth 1 -b 8.3.x git@bitbucket.org:convertigoqualif/convertigo-qualif-jmx-1.git
          
    - run:
        name: Pull the docker aks image
        command: |
          source /tmp/build.env
          CONVERTIGO_IMAGE=$CONVERTIGO_DOCKER:$CONVERTIGO_DOCKER_IMAGE-aks
          
          docker pull $CONVERTIGO_IMAGE
          docker tag $CONVERTIGO_IMAGE c8o:latest
          docker pull convertigo/qualif-jmeter:v1
          
    - run:
        name: Run the qualif
        command: |
          source /tmp/build.env
          cd convertigo-qualif-jmx-1
          sh run.sh
          mkdir -p $CONVERTIGO_DIST
          mv out $CONVERTIGO_DIST/qualif
          
    - run:
        name: Sync results to S3
        command: |
          source /tmp/build.env
          aws s3 sync --storage-class REDUCED_REDUNDANCY --acl public-read $CONVERTIGO_DIST/.. s3://convertigo-ci/
          
  qualif_jmx_2:
    <<: *defaults
    steps:
    - aws-cli/setup
    
    - restore_cache:
        keys:
        - v1-build-env-{{ .Environment.CIRCLE_WORKFLOW_ID }}
    
    - setup_remote_docker:
        version: default
    
    - run:
        name: Checkout the qualif-jmx-2 project
        command: |
          ssh-keyscan bitbucket.org >> ~/.ssh/known_hosts
          echo -e "Host bitbucket.org\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
          git clone --depth 1 -b 8.3.x git@bitbucket.org:convertigoqualif/convertigo-qualif-jmx-2.git
          
    - run:
        name: Pull the docker default image
        command: |
          source /tmp/build.env
          CONVERTIGO_IMAGE=$CONVERTIGO_DOCKER:$CONVERTIGO_DOCKER_IMAGE
          
          docker pull $CONVERTIGO_IMAGE
          docker tag $CONVERTIGO_IMAGE c8o:latest
          docker pull convertigo/qualif-jmeter:v2
          
    - run:
        name: Run the qualif
        command: |
          source /tmp/build.env
          cd convertigo-qualif-jmx-2
          sh run.sh
          mkdir -p $CONVERTIGO_DIST
          mv out $CONVERTIGO_DIST/qualif
          
    - run:
        name: Sync results to S3
        command: |
          source /tmp/build.env
          aws s3 sync --storage-class REDUCED_REDUNDANCY --acl public-read $CONVERTIGO_DIST/.. s3://convertigo-ci/
          
  qualif_jmx_3:
    <<: *defaults
    steps:
    - aws-cli/setup
    
    - restore_cache:
        keys:
        - v1-build-env-{{ .Environment.CIRCLE_WORKFLOW_ID }}
    
    - setup_remote_docker:
        version: default
    
    - run:
        name: Checkout the qualif-jmx-3 project
        command: |
          ssh-keyscan bitbucket.org >> ~/.ssh/known_hosts
          echo -e "Host bitbucket.org\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
          git clone --depth 1 -b 8.3.x git@bitbucket.org:convertigoqualif/convertigo-qualif-jmx-3.git
          
    - run:
        name: Pull the docker default image
        command: |
          source /tmp/build.env
          CONVERTIGO_IMAGE=$CONVERTIGO_DOCKER:$CONVERTIGO_DOCKER_IMAGE
          
          docker pull $CONVERTIGO_IMAGE
          docker tag $CONVERTIGO_IMAGE c8o:latest
          docker pull convertigo/qualif-jmeter:v2
          
    - run:
        name: Run the qualif
        command: |
          source /tmp/build.env
          cd convertigo-qualif-jmx-3
          sh run.sh
          mkdir -p $CONVERTIGO_DIST
          mv out $CONVERTIGO_DIST/qualif
          
    - run:
        name: Sync results to S3
        command: |
          source /tmp/build.env
          aws s3 sync --storage-class REDUCED_REDUNDANCY --acl public-read $CONVERTIGO_DIST/.. s3://convertigo-ci/
          
  build_studio:
    <<: *defaults
    
    steps:
    - aws-cli/setup
    
    - run:
        name: Install nsis and sign tools
        command: |
          sudo apt-get update
          sudo apt-get install -y osslsigncode p7zip-full nsis
          wget -q http://7-zip.org/a/7z1604-x64.msi
          7z x 7z1604-x64.msi _7zCon.sfx -so | sudo tee /usr/lib/p7zip/7zConWin64.sfx >/dev/null
          sudo chmod +x /usr/lib/p7zip/7zConWin64.sfx
          rm *.msi
          
    - attach_workspace:
        at: ..
        
    - restore_cache:
        keys:
        - v1-build-env-{{ .Environment.CIRCLE_WORKFLOW_ID }}
        
    - restore_cache:
        keys:
        - v4-m2-{{ checksum "build.gradle" }}-{{ checksum ".circleci/config.yml" }}
        - v4-m2-
        
    - run:
        name: Build Studio
        command: |
          source /tmp/build.env
          sh gradlew --info --stacktrace -PconvertigoRevision=$CONVERTIGO_BUILD_NAME buildStudio | grep -v -e '^[[:space:]]*$' -e 'Comparing' -e 'Progress'
          
    - save_cache:
        paths:
        - ~/.m2
        key: v4-m2-{{ checksum "build.gradle" }}-{{ checksum ".circleci/config.yml" }}
        
    - save_cache:
        paths:
          - ~/.gradle
          - .gradle
        key: v3-dependencies-studio-{{ checksum "build.gradle" }}-{{ checksum ".circleci/config.yml" }}
        
    - restore_cache:
        keys:
        - v1-jre-{{ checksum "installers/nsis/download-jdk.sh" }}
        
    - run:
        name: Download JDKs
        command: |
          if [ ! -d /tmp/c8o_jre ] ; then
              sh installers/nsis/download-jdk.sh
          fi
          du -sh /tmp/c8o_jre/*
          
    - save_cache:
        paths:
        - /tmp/c8o_jre
        key: v1-jre-{{ checksum "installers/nsis/download-jdk.sh" }}
        
    - run:
        name: Sign exe and make archives
        command: |
          source /tmp/build.env
          openssl enc -aes-256-cbc -d -md md5 -in installers/nsis/convertigo.pfx.aes -out /tmp/convertigo.pfx -k $PFX_AES
          
          dir_w64=eclipse-repository/target/products/com.convertigo.studio/win32/win32/x86_64
          dir_lin=eclipse-repository/target/products/com.convertigo.studio/linux/gtk/x86_64
          dir_mac=eclipse-repository/target/products/com.convertigo.studio/macosx/cocoa/x86_64
          dir_mac_arm=eclipse-repository/target/products/com.convertigo.studio/macosx/cocoa/aarch64
          
          mkdir for_mac
          cp /tmp/build.env for_mac/
          
          if [ -d ${dir_w64} ]; then
             (mv /tmp/c8o_jre/win ${dir_w64}/jre
              mv ${dir_w64}/ConvertigoStudio.exe /tmp/ConvertigoStudio_x86_64.exe
              TIMESTAMP=http://timestamp.digicert.com
              if [ ! $(osslsigncode sign -pkcs12 /tmp/convertigo.pfx -pass $PFX_PWD -t $TIMESTAMP -in /tmp/ConvertigoStudio_x86_64.exe -out ${dir_w64}/ConvertigoStudio.exe) ]; then
                TIMESTAMP=http://timestamp.verisign.com/scripts/timstamp.dll
                if [ ! $(osslsigncode sign -pkcs12 /tmp/convertigo.pfx -pass $PFX_PWD -t $TIMESTAMP -in /tmp/ConvertigoStudio_x86_64.exe -out ${dir_w64}/ConvertigoStudio.exe) ]; then
                  TIMESTAMP=http://timestamp.globalsign.com/scripts/timstamp.dll
                  osslsigncode sign -pkcs12 /tmp/convertigo.pfx -pass $PFX_PWD -t $TIMESTAMP -in /tmp/ConvertigoStudio_x86_64.exe -out ${dir_w64}/ConvertigoStudio.exe
                fi
              fi
              dir_w64_web=$(dirname ${dir_w64}/plugins/com.twinsoft.convertigo.studio_*/tomcat/webapps/convertigo/WEB-INF/web.xml) 
              echo "build.version=${convertigoRevision}" > ${dir_w64_web}/build.txt
              echo "build.date=$(date)" >> ${dir_w64_web}/build.txt
              echo "build.filename=convertigo-studio-$CONVERTIGO_VERSION-win64.exe" >> ${dir_w64_web}/build.txt
              makensis -V1 -DConvertigoVersion=$CONVERTIGO_VERSION_NUMBER -DArch=x86_64 -DOutFile=/tmp/convertigo-studio-$CONVERTIGO_VERSION-win64.exe installers/nsis/studio.nsi
              osslsigncode sign -pkcs12 /tmp/convertigo.pfx -pass $PFX_PWD -t $TIMESTAMP -in /tmp/convertigo-studio-$CONVERTIGO_VERSION-win64.exe -out $CONVERTIGO_DIST/convertigo-studio-$CONVERTIGO_VERSION-win64.exe) &
          fi
          if [ -d ${dir_lin} ]; then
              mv /tmp/c8o_jre/lin ${dir_lin}/jre
              dir_lin_web=$(dirname ${dir_lin}/plugins/com.twinsoft.convertigo.studio_*/tomcat/webapps/convertigo/WEB-INF/web.xml) 
              echo "build.version=${convertigoRevision}" > ${dir_lin_web}/build.txt
              echo "build.date=$(date)" >> ${dir_lin_web}/build.txt
              echo "build.filename=convertigo-studio-$CONVERTIGO_VERSION-linux64.tar.gz" >> ${dir_lin_web}/build.txt
              mv ${dir_lin} convertigo-studio-$CONVERTIGO_VERSION-linux64
              tar -I "gzip --fast" -cf $CONVERTIGO_DIST/convertigo-studio-$CONVERTIGO_VERSION-linux64.tar.gz convertigo-studio-$CONVERTIGO_VERSION-linux64 &
          fi
          if [ -d ${dir_mac} ]; then
              mv /tmp/c8o_jre/mac ${dir_mac}/ConvertigoStudio.app/Contents/jre
              dir_mac_web=$(dirname ${dir_mac}/ConvertigoStudio.app/Contents/Eclipse/plugins/com.twinsoft.convertigo.studio_*/tomcat/webapps/convertigo/WEB-INF/web.xml) 
              echo "build.version=${convertigoRevision}" > ${dir_mac_web}/build.txt
              echo "build.date=$(date)" >> ${dir_mac_web}/build.txt
              echo "build.filename=convertigo-studio-$CONVERTIGO_VERSION-macosx.pkg" >> ${dir_mac_web}/build.txt
              mv ${dir_mac} for_mac/convertigo-studio-$CONVERTIGO_VERSION-macosx
          fi
          if [ -d ${dir_mac_arm} ]; then
              mv /tmp/c8o_jre/mac-arm ${dir_mac_arm}/ConvertigoStudio.app/Contents/jre
              dir_mac_arm_web=$(dirname ${dir_mac_arm}/ConvertigoStudio.app/Contents/Eclipse/plugins/com.twinsoft.convertigo.studio_*/tomcat/webapps/convertigo/WEB-INF/web.xml) 
              echo "build.version=${convertigoRevision}" > ${dir_mac_arm_web}/build.txt
              echo "build.date=$(date)" >> ${dir_mac_arm_web}/build.txt
              echo "build.filename=convertigo-studio-$CONVERTIGO_VERSION-macosx-arm.pkg" >> ${dir_mac_arm_web}/build.txt
              mv ${dir_mac_arm} for_mac/convertigo-studio-$CONVERTIGO_VERSION-macosx-arm
          fi
          for job in $(jobs -p); do
              wait $job
          done
        
    - run:
        name: Sign Studios with GPG
        command: |
          source /tmp/build.env
          openssl enc -aes-256-cbc -d -md md5 -in installers/convertigo.gpg.aes -out installers/convertigo.gpg -k $PFX_AES
          cp installers/convertigo.gpg for_mac/
          cp installers/entitlements.plist for_mac/
          mkdir -p ~/.gnupg
          tar -xvf installers/convertigo.gpg -C ~/.gnupg
          find $CONVERTIGO_DIST -type f -exec gpg -ab {} \;
          
    - run:
        name: Sync builds to S3
        command: |
          source /tmp/build.env
          aws s3 sync --storage-class REDUCED_REDUNDANCY --acl public-read ~/s3 s3://convertigo-ci/
          if [ "$CONVERTIGO_VERSION_TAG" = "" ] && [ "$CIRCLE_BRANCH" = "" ] ; then
            aws s3 sync --storage-class REDUCED_REDUNDANCY --acl public-read eclipse-repository/target/repository s3://convertigo-update-site/release/$CONVERTIGO_MAJOR
          else
            aws s3 sync --storage-class REDUCED_REDUNDANCY --acl public-read eclipse-repository/target/repository s3://convertigo-update-site/beta/$CONVERTIGO_MAJOR
          fi
          
    - run:
        name: Remove old Docker images
        command: |
          source /tmp/build.env
          if [ "$CONVERTIGO_DOCKER" = "convertigo/convertigo-ci" ]; then
            DO="true"
            while [ $DO = "true" ]; do
              DO="false"
              echo "finding images ..."
              for image in $(curl -s 'https://cloud.docker.com/v2/repositories/convertigo/convertigo-ci/tags/?page_size=25&page=5' | jq -r '.results[].name' || true); do
                img=$(echo $image)
                echo "delete $img"
                curl -s -X DELETE -u $DOCKER_USERNAME:$DOCKER_PASSWORD https://cloud.docker.com/v2/repositories/convertigo/convertigo-ci/tags/$img/
                DO="true"
              done
            done
          fi
          
    - persist_to_workspace:
        root: for_mac
        paths:
        - .
          
  build_studio_mac:
    macos:
      xcode: 15.0.0
    steps:
    - aws-cli/setup
    - attach_workspace:
        at: for_mac
    - run:
        name: Sign Studio
        command: |
          source for_mac/build.env
          security create-keychain -p "" ~/Library/Keychains/MyKeychain.keychain
          security default-keychain -s ~/Library/Keychains/MyKeychain.keychain
          security unlock-keychain -p "" ~/Library/Keychains/MyKeychain.keychain
          security set-keychain-settings -t 7200 -l ~/Library/Keychains/MyKeychain.keychain
          security list-keychains -d user
          echo "${APPLE_CERT_DEV_ID_APP_BASE64}" | base64 -D -o DevIdApplication.p12
          echo "${APPLE_CERT_DEV_ID_INS_BASE64}" | base64 -D -o DevIdInstaller.p12
          security import ./DevIdApplication.p12 -k ~/Library/Keychains/MyKeychain.keychain -P "${APPLE_CERT_PASSWORD}" -T /usr/bin/codesign -T /usr/bin/security -T /usr/bin/productbuild
          security import ./DevIdInstaller.p12 -k ~/Library/Keychains/MyKeychain.keychain -P "${APPLE_CERT_PASSWORD}" -T /usr/bin/codesign -T /usr/bin/security -T /usr/bin/productbuild
          security find-identity -p codesigning
          security set-key-partition-list -S apple-tool:,apple: -s -k '' ~/Library/Keychains/MyKeychain.keychain
          
          export OUTPUT_DIR=DIST/convertigo-${CONVERTIGO_BUILD_NAME}
          mkdir -p ${OUTPUT_DIR}
          
          sed -e "s,.studio<,.studio.arm64<," -i.bak for_mac/convertigo-studio-${CONVERTIGO_VERSION}-macosx-arm/ConvertigoStudio.app/Contents/Info.plist
          rm for_mac/convertigo-studio-${CONVERTIGO_VERSION}-macosx-arm/ConvertigoStudio.app/Contents/Info.plist.bak
          codesign --entitlements for_mac/entitlements.plist --options=runtime --deep -vvv -f --sign "Developer ID Application: Convertigo (${APPLE_TEAM_ID})" for_mac/convertigo-studio-${CONVERTIGO_VERSION}-macosx-arm/ConvertigoStudio.app
          productbuild --component for_mac/convertigo-studio-${CONVERTIGO_VERSION}-macosx-arm/ConvertigoStudio.app "/Applications" --sign "Developer ID Installer: Convertigo (${APPLE_TEAM_ID})" ${OUTPUT_DIR}/convertigo-studio-${CONVERTIGO_VERSION}-macosx-arm.pkg
          
          sed -e "s,.studio<,.studio.x86_64<," -i.bak for_mac/convertigo-studio-${CONVERTIGO_VERSION}-macosx/ConvertigoStudio.app/Contents/Info.plist
          rm for_mac/convertigo-studio-${CONVERTIGO_VERSION}-macosx/ConvertigoStudio.app/Contents/Info.plist.bak
          codesign --entitlements for_mac/entitlements.plist --options=runtime --deep -vvv -f --sign "Developer ID Application: Convertigo (${APPLE_TEAM_ID})" for_mac/convertigo-studio-${CONVERTIGO_VERSION}-macosx/ConvertigoStudio.app
          productbuild --component for_mac/convertigo-studio-${CONVERTIGO_VERSION}-macosx/ConvertigoStudio.app "/Applications" --sign "Developer ID Installer: Convertigo (${APPLE_TEAM_ID})" ${OUTPUT_DIR}/convertigo-studio-${CONVERTIGO_VERSION}-macosx-x86_64.pkg
          
          xcrun notarytool submit ${OUTPUT_DIR}/convertigo-studio-${CONVERTIGO_VERSION}-macosx-arm.pkg --apple-id "${APPLE_ID}" --password "${APPLE_PASSWORD}" --team-id "${APPLE_TEAM_ID}"
          xcrun notarytool submit ${OUTPUT_DIR}/convertigo-studio-${CONVERTIGO_VERSION}-macosx-x86_64.pkg --apple-id "${APPLE_ID}" --password "${APPLE_PASSWORD}" --team-id "${APPLE_TEAM_ID}"
          
          #brew install gnupg
          
          #mkdir -p ~/.gnupg
          #tar -xvf for_mac/convertigo.gpg -C ~/.gnupg
          #find ${OUTPUT_DIR} -type f -exec gpg -ab {} \;
          
          echo "prepare s3 upload, aws client version"
          aws --version
          
          aws s3 sync --debug --storage-class REDUCED_REDUNDANCY --acl public-read DIST s3://convertigo-ci/
          
  release:
    docker:
    - image: cibuilds/github:latest
    
    steps:
    - restore_cache:
        keys:
        - v1-build-env-{{ .Environment.CIRCLE_WORKFLOW_ID }}
        
    - run:
        name: Sync builds to GitHub
        command: |
          source /tmp/build.env
          mkdir dist
          for f in "convertigo-studio-$CONVERTIGO_VERSION-win64.exe" \
                   "convertigo-studio-$CONVERTIGO_VERSION-macosx.tar.gz" \
                   "convertigo-studio-$CONVERTIGO_VERSION-linux64.tar.gz" \
                   "convertigo-server-$CONVERTIGO_VERSION-win64.zip" \
                   "convertigo-$CONVERTIGO_VERSION.war"  ; do
            curl -sf $CONVERTIGO_URL/$f --output dist/$f || echo "$f not found"
            curl -sf $CONVERTIGO_URL/$f.asc --output dist/$f.asc || echo "$f.asc not found"
          done
          VERSION=$CIRCLE_TAG
          PRELEASE="-prerelease"
          if [ "$CONVERTIGO_VERSION_NUMBER" = "$VERSION" ] && \
             [ $(echo $VERSION | sed -r s/\\d+\\.\\d+\\.\\d+/ok/) = "ok" ] ; then
            PRELEASE=""
          fi
          ghr -t $GITHUB_TOKEN -u $CIRCLE_PROJECT_USERNAME -r $CIRCLE_PROJECT_REPONAME -c $CIRCLE_SHA1 \
              -n Convertigo\ $CIRCLE_TAG -b To\ Edit -draft -delete $PRELEASE $VERSION dist
          
workflows:
  version: 2
  all:
    jobs:
    - build_engine_jar:
        filters:
          branches:
            ignore:
            - 7.5.x
          tags:
            only: /^\d+\..*$/
    - build_engine_war:
        requires:
        - build_engine_jar
        filters:
          tags:
            only: /^\d+\..*$/
    - build_studio:
        requires:
        - build_engine_jar
        filters:
          tags:
            only: /^\d+\..*$/
    - build_studio_mac:
        requires:
        - build_studio
        filters:
          tags:
            only: /^\d+\..*$/
    - build_windows_server:
        requires:
        - build_engine_war
        filters:
          tags:
            only: /^\d+\..*$/
    - build_docker_default:
        requires:
        - build_engine_war
        filters:
          tags:
            only: /^\d+\..*$/
    - build_docker_aks:
        requires:
        - build_engine_war
        filters:
          tags:
            only: /^\d+\..*$/
    - qualif_jmx_1:
        requires:
        - build_docker_aks
        filters:
          tags:
            only: /^\d+\..*$/
    - qualif_jmx_2:
        requires:
        - build_docker_default
        filters:
          tags:
            only: /^\d+\..*$/
    - qualif_jmx_3:
        requires:
        - build_docker_default
        filters:
          tags:
            only: /^\d+\..*$/
    - release:
        requires:
        - build_docker_default
        - build_docker_aks
        - build_studio
        - build_windows_server
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /^\d+\..*$/
triggers:
  pull_requests: off
