display_name=Table
short_description=Extract data from screen as a table (set of structured data containing rows and columns). | The {{Reference}}Table{{-Reference}} extraction rule structures screen areas including text into a table XML structure. The generated structure can be used:\
***to represent arrays as graphic tables for webization projects, or \
***as a structured table for data integration projects.\n\
Prior to running a {{Reference}}Table{{-Reference}} extraction rule, blocks must be properly merged or split so that blocks can be dispatched in the defined cells.\n\
The {{Reference}}Table{{-Reference}} extraction rule works following two modes: \
***{{Produit/Fonction}}Automatic mode{{-Produit/Fonction}} (set by default if no column description is provided): the rule automatically determines the columns of the array and dispatches data in columns depending on their position to the first line of the array. \
***{{Produit/Fonction}}Explicit mode{{-Produit/Fonction}}: the rule is based on the column description made by the Convertigo application programmer to distribute data as required in each column. \
Each block of the first line represents a column defined as follows: ***starting position = block starting column ***ending position = (starting position of next block) - 1. \n\
If complex arrays are involved, it is recommended to explicitly describe array columns by editing the {{Produit/Fonction}}Columns{{-Produit/Fonction}} parameter. This is the second mode. \n\
The {{Reference}}Table{{-Reference}} extraction rule is similar to the {{Reference}}Subfile{{-Reference}} extraction rule but must be configured manually. It supports actions lines, and scrolling. With 5250 environments, it is preferable to use the {{Reference}}Subfile{{-Reference}} rule if the application complies with CUA (IBM guide line for designing applications) because the {{Reference}}Subfile{{-Reference}} rule is automatic and does not require a per-screen configuration. \n\
For all other environments (3270, DKU, VT, etc.), use preferably the {{Reference}}Table{{-Reference}} extraction rule. This rule allows to output structured arrayed data whatever the input data, provided that you configure it for a specific screen class. 
property.columns.display_name=Columns
property.columns.short_description=Defines the list of columns of the table, with their header, position and width. | This parameter explicitly describes the columns of the array. \n\
For each column, you have to describe the following elements: \
***{{Produit/Fonction}}Label{{-Produit/Fonction}}: text of the title displayed (Webization) and XML tag name of the data (Data integration). The {{Produit/Fonction}}Label{{-Produit/Fonction}} property supports the {{Computer}}"\\"{{-Computer}} character specifying a line break within the column title.\
***{{Produit/Fonction}}Initial column{{-Produit/Fonction}}: starting position of the column (0 based).\
***{{Produit/Fonction}}Final column{{-Produit/Fonction}}: ending position of the column (0 based).\
***{{Produit/Fonction}}Line index{{-Produit/Fonction}}: for "folded" tables where a logical line of data is represented physically as several lines. Gives the index of the physical line starting from 0.\n\
If no column is defined, the rule tries to automatically define the columns (see {{Produit/Fonction}}Automatic mode{{-Produit/Fonction}} property description).
property.tagName.display_name=XML tag name
property.tagName.short_description=Defines the XML tag name for the generated block (of type "table"). | The default XML Tag name ({{Computer}}table{{-Computer}}) can be overridden using this property. Can be useful for data integration projects, for example to extract two tables from the same screen (by setting a different tag name for each table).
property.actions.display_name=Actions table
property.actions.short_description=Defines actions associated with the selection column. | Each action is described using the following items:\
***{{Produit/Fonction}}Value{{-Produit/Fonction}}: value to be typed in by a user in the selection field (in the selection column) to perform a specific action. In our example, would be {{Computer}}A{{-Computer}}.\
***{{Produit/Fonction}}Key{{-Produit/Fonction}}: key used to validate the action. Usually, {{Computer}}KEY_ENTER{{-Computer}} for 3270 and 5250 or {{Computer}}KEY_XMIT{{-Computer}} for BULL DKU.\
***{{Produit/Fonction}}Label{{-Produit/Fonction}}: label to be displayed to the user when clicking on the contextual menu. In our example, {{Computer}}Action{{-Computer}}. \n\
To be used when no actions line is displayed on screen (mostly 3270 application). In other cases, actions can be automatically extracted from the screen by using the {{Produit/Fonction}}Relative index of the actions line{{-Produit/Fonction}} parameter.
property.columnSelection.display_name=Index of the selection column
property.columnSelection.short_description=Defines the selection (or action) column using its index in the column table. | Equals to {{Computer}}0{{-Computer}} in most of the cases. Set to {{Computer}}-1{{-Computer}} if there is no selection column. \n\
Selection column definition is important as contextual menus will only appear if it is correctly defined.
property.separatorChars.display_name=Actions separators
property.separatorChars.short_description=Defines the list of separator characters used in the actions line to separate two actions (usually blank space). | Used when actions are extracted from screen.
property.separatorCharsForTokens.display_name=Actions label separators
property.separatorCharsForTokens.short_description=Defines the list of separator characters used to separate each action from its action label in the actions line. | Used when actions are extracted from screen. \n\
In our example, this separator is the {{Computer}}={{-Computer}} character.
property.endPattern.display_name=Actions end pattern
property.endPattern.short_description=Pattern that ends the block including actions. | Used when actions are extracted from screen. \n\
Some actions lines start and end with patterns: for example {{Computer}}(A=Action B=Bound C=Create){{-Computer}}. In this case, the end pattern is the {{Computer}}")"{{-Computer}} character.
property.startPattern.display_name=Actions start pattern
property.startPattern.short_description=Pattern that starts the block including actions. | Used when actions are extracted from screen. \n\
Some actions lines start and end with patterns: for example {{Computer}}(A=Action B=Bound C=Create){{-Computer}}. In this case, the start pattern is the {{Computer}}"("{{-Computer}} character.
property.lineActions.display_name=Relative index of the actions line
property.lineActions.short_description=Defines where actions are in relation to the table. | Set this parameter to relative line of the actions line from the top of the data zone. In our example, the index is {{Computer}}-4{{-Computer}}. This enables the {{Reference}}Table{{-Reference}} extraction rule automatically extract the actions table from the screen. Set this to {{Computer}}0{{-Computer}} if no actions line is to be extracted.
property.offset.display_name=Offset
property.offset.short_description=Defines the table offset (in lines) used to shift the table position. | After extraction, the table is displayed on the webized screen exactly where the data zone has been defined. In most cases, a title line appears above the table in addition to the table title line. You can then use the offset parameter to shift the table up and cover the redundant title line. \n\
Usually set to the number of lines of the title zone ({{Computer}}2{{-Computer}} in our example, to shift up the table by two lines). Please note that the {{Produit/Fonction}}Offset{{-Produit/Fonction}} property supports negative values (moves the webized table down).
property.doNotIncludeTitles.display_name=Remove titles
property.doNotIncludeTitles.short_description=Defines whether the title row of the table must be removed. | When extracted, the XML table contains titles in the first row, which is useful for webization projects. But for Data integration projects (Web Services), titles are usually unwanted. In this case, set the property to {{Computer}}true{{-Computer}}. 
property.doNotAccumulate.display_name=Do not accumulate
property.doNotAccumulate.short_description=Enables to limit to one page table data accumulation in a same tag (i.e. create one tag per page). | Normally, when accumulating data as a table on several pages ({{Produit/Fonction}}Return{{-Produit/Fonction}} property set to {{Computer}}accumulate{{-Computer}} in a transaction's exit handler), data come in as new lines of the same table. In some specific cases, you will want to disable this feature, by setting this property to {{Computer}}true{{-Computer}}.
property.autoValidate.display_name=Auto validate
property.autoValidate.short_description=Auto validates action triggered after an option has been chosen in the selection column. | Set this to {{Computer}}true{{-Computer}} if you want the action to be executed immediately after a user has clicked on an option of the contextual action menu. Usually set to {{Computer}}false{{-Computer}} to enable users to click options on several lines before validating by {{Computer}}ENTER{{-Computer}}. 
property.resize.display_name=Height resize
property.resize.short_description=Defines a number of lines by which increase (positive value) or decrease (negative value) the table height. | The webized height of a table is automatically computed from its number of lines. To enable the scroll feature, set this property to a number of lines smaller than the number of physical lines in the table by setting a negative value into this property.
