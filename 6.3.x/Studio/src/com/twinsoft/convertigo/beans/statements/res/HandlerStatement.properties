display_name=Handler
short_description=Defines an event handler. | A {{Reference}}Handler{{-Reference}} is similar to a {{Computer}}Function{{-Computer}} except that it is automatically executed when the associated event occurs. Events that can be associated with it are:\
***transaction start event, which is fired when Convertigo starts executing the client request to a transaction, \
***XML generated event, which is fired when Convertigo has generated the XML response, just before the transaction ends.\n\
{{Orange Twinsoft}}Notes:{{-Orange Twinsoft}}\
***A {{Reference}}Handler{{-Reference}} contains other statements that define the actions to be performed. It can return a result value (empty string by default). If {{Computer}}cancel{{-Computer}} is returned by the {{Reference}}transaction start Handler{{-Reference}}, the rest of the transaction execution is canceled.\
***{{Reference}}Handlers{{-Reference}} can only be added to a transaction, one {{Reference}}Handler{{-Reference}} of each event type per transaction.
property.handlerType.display_name=Event type
property.handlerType.short_description=Defines the handler associated event type. | {{Reference}}Handlers{{-Reference}} can be associated to the following event types:\
***{{Computer}}TransactionStarted{{-Computer}} event type: executed when the transaction start event occurs, \
***{{Computer}}XmlGenerated{{-Computer}} event type: executed when the XML generated event occurs.
property.handlerResult.display_name=Result
property.handlerResult.short_description=Defines the handler's default resulting value. | Depending on the {{Reference}}Handler{{-Reference}} type, this property can be chosen among several available values.\n\
For a {{Reference}}transaction start Handler{{-Reference}}, this property can take the following values:\
***{{Computer}}<empty>{{-Computer}}: continues the transaction execution, \
***{{Computer}}cancel{{-Computer}}: stops the transaction and cancels the rest of the transaction execution.\n\
For a {{Reference}}Screen class entry handler{{-Reference}} and {{Reference}}Default entry handler{{-Reference}}, this property can take the following values:\
***{{Computer}}<empty>{{-Computer}}: goes on and extracts data using extraction rules, \
***{{Computer}}continue{{-Computer}}: goes on and extract data using extraction rules, \
***{{Computer}}redetect{{-Computer}}: does not extract data and redetects a new screen class, \
***{{Computer}}skip{{-Computer}}: stops the transaction without extracting data.\n\
For a {{Reference}}Screen class exit handler{{-Reference}} and {{Reference}}Default exit handler{{-Reference}}, this property can take the following values:\
***{{Computer}}<empty>{{-Computer}}: ends the transaction, \
***{{Computer}}accumulate{{-Computer}}: accumulates extracted data (data is extracted from last detected screen class then added to any other extracted data) and redetects a new screen class.\n\
The {{Reference}}Handler{{-Reference}} default return value defined thanks to this property can be overridden by a child {{Reference}}Return{{-Reference}} statement.
property.handlerLoopable.display_name=Infinite loop protection
property.handlerLoopable.short_description=Defines whether the handler should be protected against infinite loops in transaction. | If set to {{Computer}}true{{-Computer}} (default value), the handler prevents infinite loops by throwing a Convertigo Engine exception when an infinite loop is detected. \n\
Default value should not be changed unless you specifically want the handler to authorize loops in transaction. 