display_name=jElement
short_description=Defines an XML element based on a JavaScript expression. | The {{Reference}}jElement{{-Reference}} step adds an element node with text content to parent generated XML element in the sequence XML output. \n\
The XML element resulting from this step can be output in the response XML of the sequence if the {{Produit/Fonction}}Output{{-Produit/Fonction}} property is set to {{Computer}}true{{-Computer}}, or used as a source by any other following step. \n\
The element is named after the value of the {{Produit/Fonction}}Node name{{-Produit/Fonction}} property, its value is set thanks to a JavaScript expression defined in {{Produit/Fonction}}Expression{{-Produit/Fonction}} property. If the JavaScript expression is null, the XML element contains the value of the {{Produit/Fonction}}Default value{{-Produit/Fonction}} property.\n\
{{Orange Twinsoft}}Note:{{-Orange Twinsoft}} Child steps can be added under this step to create a data structure.
property.nodeName.display_name=Node name
property.nodeName.short_description=Defines the tag name of the generated XML element. | This property can contain any name, no words are reserved, and must follow the rules on XML naming:\
***it can contain letters, numbers, and other characters, \
***it cannot start with a number, \
***it cannot contain spaces nor punctuation character.
property.nodeText.display_name=Default value
property.nodeText.short_description=Defines the default text value of the node. | This property allows defining a default value to use when no content is specified thanks to the {{Produit/Fonction}}Expression{{-Produit/Fonction}} property of if this expression returns {{Computer}}null{{-Computer}}.
property.expression.display_name=Expression
property.expression.short_description=Defines the expression evaluated to give the output text. | This property is a JavaScript expression that is evaluated during the sequence execution and gives the text string to output in the generated element.
