display_name=Call Sequence
short_description=Defines a step invoking a sequence. | The {{Reference}}Call Sequence{{-Reference}} step enables to call any existing sequence from the same project or another. It provides input variables to the target sequence, and returns XML data from the call.\n\
Variables to be used for the call must be described at step level by adding {{Reference}}Variables{{-Reference}} child objects. You can manually set variables or use the {{Produit/Fonction}}Import variables from the target sequence{{-Produit/Fonction}} contextual menu to automatically copy the variables definition from the target sequence.\n\
The target sequence returns structured XML data, its XML schema has to be generated while developing the sequence and is automatically imported to the {{Reference}}Call Sequence{{-Reference}} step while configuring its {{Produit/Fonction}}Sequence{{-Produit/Fonction}} property. Thus, the sequence's schema is known by the calling step and elements from the sequence result can be correctly sourced from it.\n\
{{Orange Twinsoft}}Note:{{-Orange Twinsoft}} A {{Reference}}Call Sequence{{-Reference}} step with all its properties filled and including the target variables can be easily created at once in the Convertigo Studio {{Produit/Fonction}}Projects{{-Produit/Fonction}} view. To do so, drag-and-drop with {{Computer}}Ctrl{{-Computer}} key pressed a sequence from its parent project to a sequence or a block step where the {{Reference}}Call Sequence{{-Reference}} step has to be created.
property.sourceSequence.display_name=Sequence
property.sourceSequence.short_description=Defines the target project and sequence to request from this project. | The target sequence must be one of the sequences from an existing project, the project in which the {{Reference}}Call Sequence{{-Reference}} step is added or another project opened in the same Convertigo. \n\
This property is set by selecting the target sequence in a list of values of the following form: {{Computer}}<project_name>.<sequence_name>{{-Computer}} to avoid mistakes in case of sequences with the same name in several projects.
property.inheritTransactionCtx.display_name=Inherit context
property.inheritTransactionCtx.short_description=Defines whether the context used by the current sequence for transaction's steps should also be used by the target sequence. | Sequences are executing all child transactions (transactions called thanks to {{Reference}}Call transaction{{-Reference}} steps) in a context automatically created (except for transactions called thanks to a {{Reference}}Call transaction{{-Reference}} step with {{Produit/Fonction}}Context{{-Produit/Fonction}} property set). For other child transactions, the automatically created context can be passed to a child sequence (called thanks to a {{Reference}}Call Sequence{{-Reference}} step) for it to re-use this context for executing its child transactions. To do so, set this property to {{Computer}}true{{-Computer}}.
