display_name=Call Transaction
short_description=Defines a step invoking a transaction. | The {{Reference}}Call Transaction{{-Reference}} step enables to call any existing transaction from the same project or another. It provides input variables to the target transaction, and returns XML data from the call.\n\
Variables to be used for the call must be described at step level by adding {{Reference}}Variables{{-Reference}} child objects. You can manually set variables or use the {{Produit/Fonction}}Import variables from the target transaction{{-Produit/Fonction}} contextual menu to automatically copy the variables definition from the target transaction.\n\
The target transaction returns structured XML data, its XML schema has to be generated while developing the transaction and is automatically imported to the {{Reference}}Call Transaction{{-Reference}} step while configuring its {{Produit/Fonction}}Transaction{{-Produit/Fonction}} property. Thus, the transaction's schema is known by the calling step and elements from the transaction result can be correctly sourced from it.\n\
{{Orange Twinsoft}}Note:{{-Orange Twinsoft}} A {{Reference}}Call Transaction{{-Reference}} step with all its properties filled and including the target variables can be easily created at once in the Convertigo Studio {{Produit/Fonction}}Projects{{-Produit/Fonction}} view. To do so, drag-and-drop with {{Computer}}Ctrl{{-Computer}} key pressed a transaction from its parent connector to a sequence or a block step where the {{Reference}}Call Transaction{{-Reference}} step has to be created.
property.sourceTransaction.display_name=Transaction
property.sourceTransaction.short_description=Defines the target project, connector from this project and transaction to request. | The target transaction must be one of the transactions of one of the connectors from an existing project, the project in which the {{Reference}}Call Sequence{{-Reference}} step is added or another project opened in the same Convertigo. \n\
This property is set by selecting the target transaction in a list of values of the following form: {{Computer}}<project_name>.<connector_name>.<transaction_name>{{-Computer}} to avoid mistakes in case of transactions with the same name in several projects.
property.connectionStringDefinition.display_name=Connection string
property.connectionStringDefinition.short_description=Replaces the connection parameters of target connector. | The connection string represents different data depending on connector type:\
***{{Reference}}HTTP / HTML connector{{-Reference}}: replaces the connector URL string made up of the connector's {{Produit/Fonction}}Server{{-Produit/Fonction}} name, server {{Produit/Fonction}}Port{{-Produit/Fonction}}, {{Produit/Fonction}}Root path{{-Produit/Fonction}} and transaction's {{Produit/Fonction}}Sub path{{-Produit/Fonction}} properties.\
***{{Reference}}Javelin connector{{-Reference}}: replaces the address set in the {{Produit/Fonction}}Connection address{{-Produit/Fonction}} property, made up of {{Produit/Fonction}}Connection parameter{{-Produit/Fonction}}, {{Produit/Fonction}}Host name{{-Produit/Fonction}}, host {{Produit/Fonction}}Port{{-Produit/Fonction}} and {{Produit/Fonction}}Connection type{{-Produit/Fonction}} sub properties.
