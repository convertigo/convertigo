property.httpVerb.display_name=HTTP verb
property.httpVerb.short_description=Allows to choose the HTTP verb to use for this HTTP request: {{Computer}}GET{{-Computer}}, {{Computer}}POST{{-Computer}}, {{Computer}}PUT{{-Computer}}, {{Computer}}DELETE{{-Computer}}, {{Computer}}HEAD{{-Computer}}, {{Computer}}TRACE{{-Computer}}, {{Computer}}OPTIONS{{-Computer}} or {{Computer}}CONNECT{{-Computer}}. | For more information about HTTP verbs, you can visit the following RFC page: {{Reference}}http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html{{-Reference}}.
property.subDir.display_name=Sub path
property.subDir.short_description=Defines the end of the path for the HTTP connection. | This property allows to define the sub path, relative to the connector root path, to the target web service URI.\n\
For example, if the target is: {{Computer}}http://server/MyApp/targetpage.jsp{{-Computer}}, the connector server would be: {{Computer}}server{{-Computer}}, the connector root path: {{Computer}}/MyApp{{-Computer}} and the transaction sub path: {{Computer}}/targetpage.jsp{{-Computer}}.
property.handleCookie.display_name=Handles cookies
property.handleCookie.short_description=Defines whether cookies must be handled. | If set to {{Computer}}true{{-Computer}} (default value), the transaction maintains cookies in Convertigo's context. Default value should not be changed unless you specifically want the transaction to ignore cookies while browsing. 
property.httpParameters.display_name=HTTP headers
property.httpParameters.short_description=Defines HTTP headers to be sent. | This property allows to define the request Header Fields to be sent with the request to the target web service method. \n\
For each header, two colums have to be parametered:\
***{{Produit/Fonction}}Variable{{-Produit/Fonction}}: HTTP header name (ex: {{Computer}}Content-Type{{-Computer}}).\
***{{Produit/Fonction}}Value{{-Produit/Fonction}}: HTTP header value (ex: {{Computer}}application/x-www-from-urlencoded{{-Computer}}). 
#property.httpVariables.display_name=HTTP variables
#property.httpVariables.short_description=Defines conversions between transaction variables and HTTP variables required by the target server. | Transaction input variables. Each input variable has its own set of properties:\
#***Variable: Variable name.\
#***Description: Variable description.\
#***Default value: Variable default value if no input value is sent to the transaction.\
#***WSDL: If set to {{Computer}}true{{-Computer}}, includes this variable in the generated SOAP WSDL as an input variable for this method (transaction) of the webservice.\
#***Multi: Multi valued variables can be input more than once per request. Also, they are inserted into the transaction as JavaScript arrays, instead of strings.\
#***Personalizable: When adding this transaction as a widget in Convertigo Mashup Composer, personalizable variables are added to the widget as user preferences.\
#***Cached key: When considering cache usage to serve a request, Convertigo only compares cached key variables between the new request and the cached one to determine whether cache should be used or not.\
#***Method: HTTP method to be used for this variable if the transaction connector is to auto-connect (i.e. when {{Produit/Fonction}}Maintain connector state{{-Produit/Fonction}} is false) and if an HTTP variable name is defined for this variable.\
#***HTTP variable: If an HTTP variable name is defined, then this variable value is sent as an HTTP variable upon connector auto-connect (see {{Produit/Fonction}}Maintain connector state{{-Produit/Fonction}} parameter).
property.requestTemplate.display_name=Request template
property.requestTemplate.short_description=Defines the request body template file URL. | HTTP request sent by the transaction can contain data in its body. This data is based on a user-defined template, which can be: \
*** an XML file describing the content of the HTTP request body, possibly including transaction input variables in the data structure;\
*** or an XSL file used to transform the variable-based transaction input XML to generate the content of the HTTP request body. 
property.urlEncodingCharset.display_name=Url Encoding Charset
property.urlEncodingCharset.short_description=Defines the charset encoding to use for URL encode GET parameters for the query string or the POST parameters in case of "application/x-www-form-urlencoded" content type. If blank, it will use the connector {{Produit/Fonction}}Default Url Encoding Charset{{-Produit/Fonction}} value.