sourceSets {
	main {
		java {
			exclude 'com/twinsoft/convertigo/engine/plugins/EnvoiSMSBiller.java'
			exclude 'com/twinsoft/convertigo/engine/plugins/InfogreffeBiller.java'
			exclude 'com/twinsoft/convertigo/engine/plugins/InseeBiller.java'
			exclude 'com/twinsoft/convertigo/engine/plugins/LCABiller.java'
			srcDir 'patch'
		}
		resources {
			exclude 'com/twinsoft/convertigo/engine/plugins/EnvoiSMSBiller.java'
			exclude 'com/twinsoft/convertigo/engine/plugins/InfogreffeBiller.java'
			exclude 'com/twinsoft/convertigo/engine/plugins/InseeBiller.java'
			exclude 'com/twinsoft/convertigo/engine/plugins/LCABiller.java'
			srcDir 'patch'
		}
	}
}

eclipse {
	project {
		linkedResource name: 'patch/com', type: '2', locationUri: 'PARENT-1-PROJECT_LOC/engine/patch/com'
		linkedResource name: 'patch/org', type: '2', locationUri: 'PARENT-1-PROJECT_LOC/engine/patch/org'
		linkedResource name: 'src/com/twinsoft/convertigo/engine', type: '2', locationUri: 'PARENT-1-PROJECT_LOC/engine/src/com/twinsoft/convertigo/engine'
		linkedResource name: 'src/com/twinsoft/convertigo/beans', type: '2', locationUri: 'PARENT-1-PROJECT_LOC/engine/src/com/twinsoft/convertigo/beans'
		linkedResource name: 'src/com/twinsoft/convertigo/engine/parsers', type: '2', locationUri: 'PARENT-2-PROJECT_LOC/convertigo-provider-xul/src/com/twinsoft/convertigo/engine/parsers'
		linkedResource name: 'src/com/twinsoft/convertigo/engine/plugins', type: '2', locationUri: 'PARENT-2-PROJECT_LOC/convertigo-provider-plugins/src/com/twinsoft/convertigo/engine/plugins'
		linkedResource name: 'src/com/twinsoft/convertigo/engine/providers/couchdb', type: '2', locationUri: 'PARENT-2-PROJECT_LOC/convertigo-provider-couchdb/src/com/twinsoft/convertigo/engine/providers/couchdb'
		linkedResource name: 'src/com/twinsoft/convertigo/engine/providers/sapjco', type: '2', locationUri: 'PARENT-2-PROJECT_LOC/convertigo-provider-sap/src/com/twinsoft/convertigo/engine/providers/sapjco'
	}
	
	classpath.file.withXml {
		def node = it.asNode()
		def rp = null
		if ((rp = node.classpathentry.find { it.@path == 'org.eclipse.pde.core.requiredPlugins' }) == null) {
			rp = node.appendNode('classpathentry', [kind: 'con', path: 'org.eclipse.pde.core.requiredPlugins'])
		}
		def accessrules = rp.appendNode('accessrules')
		accessrules.appendNode('accessrule', [kind: 'accessible', pattern: 'org/eclipse/egit/ui/**'])
		accessrules.appendNode('accessrule', [kind: 'accessible', pattern: 'org/eclipse/e4/ui/**'])
		
		def depJar
		if ((depJar = node.classpathentry.find { it.@path.contains('libs/dependencies') }) != null) {
			depJar.@sourcepath = depJar.@sourcepath = depJar.@path.replace('libs/dependencies', 'libs/dependencies-sources')
		}
	}
}

dependencies {
	runtime project(':engine')
	runtime 'com.convertigo.lib:jxbrowser-license:2019.04.02'
	runtime jxBrowserGroup + ':jxbrowser:' + jxBrowserVersion
	runtime 'org.apache.tomcat.embed:tomcat-embed-core:7.0.82'
	runtime 'org.apache.tomcat.embed:tomcat-embed-logging-log4j:7.0.82'
	runtime 'org.apache.tomcat:tomcat-dbcp:7.0.82'
	runtime 'org.apache.axis2:axis2-adb:1.6.2@jar'
	runtime project.property('sapjco3Version')
}

task writeManifest(dependsOn: ['copyLicense', 'syncLib', ':engine:unzipSwaggerUI']) {
	group 'convertigo'
	
	doLast {
		def manifest = file 'META-INF/MANIFEST.MF'
		project.manifest {
			from sharedManifest
			attributes(
				'Automatic-Module-Name': 'com.twinsoft.convertigo.studio',
				'Bundle-Name': 'C-EMS studio plugin',
				'Bundle-SymbolicName': 'com.twinsoft.convertigo.studio; singleton:=true',
				'Eclipse-BundleShape': 'dir',
				'Bundle-Activator': 'com.twinsoft.convertigo.eclipse.ConvertigoPlugin',
				'Bundle-ActivationPolicy': 'lazy',
				'Bundle-ClassPath': 'bin/,icons/,tomcat/webapps/convertigo/WEB-INF/classes,lib/convertigo-eclipse.jar,' +
					fileTree(dir: 'lib')
					.collect { 'lib/' + it.name }
					.toSorted {a, b -> a.startsWith('lib/convertigo') ? -1 : b.startsWith('lib/convertigo') ? 1 : a <=> b }
					.join(','),
				'Require-Bundle': ['org.eclipse.core.expressions',
					'org.eclipse.core.resources',
					'org.eclipse.core.runtime',
					'org.eclipse.e4.ui.css.swt.theme',
					'org.eclipse.egit.ui',
					'org.eclipse.jface.text',
					'org.eclipse.jgit',
					'org.eclipse.swt',
					'org.eclipse.ui',
					'org.eclipse.ui.console',
					'org.eclipse.ui.ide',
					'org.eclipse.ui.views',
					'org.eclipse.wst.jsdt.ui',
					'org.eclipse.wst.jsdt.core',
					'org.eclipse.wst.sse.core',
					'org.eclipse.wst.sse.ui',
					'org.eclipse.wst.xml.ui',
					'ts.eclipse.ide.core'].join(',')
			)
		}.writeTo(manifest)
		manifest.text = manifest.text.replaceAll("Import-Package: .*\\s+", "")
	}
}

task copyLicense(type: Copy) {
	group 'convertigo'
	
	from '../license.txt'
	into 'src/com/twinsoft/convertigo/eclipse/wizards/setup'
}

project(':engine').afterEvaluate {
	syncLib {
		inputs.property('engine-dependency', '' + project(':engine').configurations.runtime.getAllDependencies())
	}
}

task bnppClasses(type: Copy) {
	def classesDir = file('bnpp/dist/classes')
    from('bin/main') {
    	exclude 'com/twinsoft/convertigo/**/*BeanInfo.class'
    	
    	//beans
    	include 'com/twinsoft/convertigo/beans/connectors/HttpConnector*.class'
    	include 'com/twinsoft/convertigo/beans/connectors/SqlConnector*.class'
    	
    	include 'com/twinsoft/convertigo/beans/core/RequestableObject*.class'
    	include 'com/twinsoft/convertigo/beans/core/Step.class'
    	
    	include 'com/twinsoft/convertigo/beans/mobile/components/RouteDataActionComponent*.class'
    	include 'com/twinsoft/convertigo/beans/mobile/components/dynamic/ion_objects.json'
    	
    	include 'com/twinsoft/convertigo/beans/rest/AbstractRestOperation*.class'
    	include 'com/twinsoft/convertigo/beans/rest/BasicAuthentication*.class'
    	
    	include 'com/twinsoft/convertigo/beans/steps/GetRequestHeaderStep*.class'
    	include 'com/twinsoft/convertigo/beans/steps/LDAPAuthenticationStep*.class'
    	include 'com/twinsoft/convertigo/beans/steps/PdfFormStep*.class'
    	include 'com/twinsoft/convertigo/beans/steps/SessionSetObjectStep*.class'
    	include 'com/twinsoft/convertigo/beans/steps/SessionSetStep*.class'
    	include 'com/twinsoft/convertigo/beans/steps/SetAuthenticatedUserStep*.class'
    	include 'com/twinsoft/convertigo/beans/steps/SetResponseHeaderStep*.class'
    	include 'com/twinsoft/convertigo/beans/steps/SetResponseStatusStep*.class'
    	include 'com/twinsoft/convertigo/beans/steps/XMLErrorStep*.class'
    	
    	include 'com/twinsoft/convertigo/beans/transactions/HttpTransaction*.class'
    	
    	// eclipse
    	include 'com/twinsoft/convertigo/eclipse/editors/mobile/ApplicationComponentEditor*.class'
    	include 'com/twinsoft/convertigo/eclipse/editors/property_editors/ModelObjectEditorComposite*.class'
    	
    	// engine
   		include 'com/twinsoft/convertigo/engine/ConvertigoError*.class'
   		include 'com/twinsoft/convertigo/engine/EnginePropertiesManager*.class'
   		include 'com/twinsoft/convertigo/engine/JdbcConnectionManager*.class'
    	include 'com/twinsoft/convertigo/engine/Plugin*.class'
    	include 'com/twinsoft/convertigo/engine/PluginsManager*.class'
    	include 'com/twinsoft/convertigo/engine/ProductVersion*.class'
     	include 'com/twinsoft/convertigo/engine/SchemaManager*.class'
    	
    	include 'com/twinsoft/convertigo/engine/admin/services/projects/Delete*.class'
    	include 'com/twinsoft/convertigo/engine/admin/services/projects/Deploy*.class'
    	include 'com/twinsoft/convertigo/engine/admin/services/projects/Reload*.class'
    	
    	include 'com/twinsoft/convertigo/engine/requesters/GenericRequester*.class'
    	include 'com/twinsoft/convertigo/engine/requesters/InternalRequester*.class'
    	include 'com/twinsoft/convertigo/engine/requesters/JsonServletRequester*.class'
    	include 'com/twinsoft/convertigo/engine/requesters/WebServiceServletRequester*.class'
    	
    	include 'com/twinsoft/convertigo/engine/servlets/RestApiServlet*.class'
    	
        include 'com/twinsoft/convertigo/engine/plugins/BnppPlugin*.class'
        include 'com/twinsoft/convertigo/engine/plugins/FrontalInpiBiller*.class'
        include 'com/twinsoft/convertigo/engine/plugins/FrontalInseeBiller*.class'
        include 'com/twinsoft/convertigo/engine/plugins/PortalUtils*.class'
        
        include 'com/twinsoft/convertigo/engine/util/JsonSchemaUtils*.class'
        include 'com/twinsoft/convertigo/engine/util/OpenApiUtils*.class'
        include 'com/twinsoft/convertigo/engine/util/XMLUtils*.class'
        include 'com/twinsoft/convertigo/engine/util/XSDExtractor*.class'
    }
    into(classesDir)
    
    // uncomment to preserve file lastModified
    /*def copyDetails = []
    eachFile { copyDetails << it }
    doLast {
    	copyDetails.each { FileCopyDetails details ->
        	def target = new File(destinationDir, details.path)
            if (target.exists()) { target.setLastModified(details.lastModified) }
        }
    }*/
}

task bnppStudioPatch(type: Zip, dependsOn: ['bnppClasses']) {
	archiveFileName = "patchStudio.zip"
	destinationDir = file('bnpp/dist/patch')
	preserveFileTimestamps = true
    from('bnpp/dist/classes')
}

task bnppServerPatch(type: Zip, dependsOn: ['bnppClasses']) {
	archiveFileName = "patchServer.zip"
	destinationDir = file('bnpp/dist/patch')
	preserveFileTimestamps = true
    from('bnpp/dist/classes') {
    	exclude 'com/twinsoft/convertigo/eclipse'
    }
}

task generateBnppPatches(dependsOn: ['bnppStudioPatch','bnppServerPatch']) {
	group 'bnpp'
	
	doLast {
		def classesDir = file('bnpp/dist/classes')
		delete classesDir
		
		def d = new Date().format('yyyyMMdd')
		
		def studioZip = file('bnpp/dist/patch/patchStudio_'+d+'.zip')
		delete studioZip
		file('bnpp/dist/patch/patchStudio.zip').renameTo(studioZip)
		
		def serverZip = file('bnpp/dist/patch/patchServer_'+d+'.zip')
		delete serverZip
		file('bnpp/dist/patch/patchServer.zip').renameTo(serverZip)
	
		println "VERIFIER si com.twinsoft.convertigo.engine.ProductVersion.tag est bien positionné à patch-" + d + " !!"
		println "Si ce n'est pas le cas, modifier le à la date du jour et relancer la tâche !"
	}
}
