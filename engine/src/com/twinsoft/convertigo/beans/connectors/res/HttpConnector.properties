# Copyright (c) 2001-2025 Convertigo SA.
# 
# This program  is free software; you  can redistribute it and/or
# Modify  it  under the  terms of the  GNU  Affero General Public
# License  as published by  the Free Software Foundation;  either
# version  3  of  the  License,  or  (at your option)  any  later
# version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS  FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public
# License along with this program;
# if not, see <http://www.gnu.org/licenses/>.

display_name=HTTP connector
short_description=Establishes HTTP connections. | \
 <p>HTTP connections are needed by Convertigo for connecting to and communicating with required HTTP servers. The <i>HTTP connector</i> is used to consume web services such as REST, SOAP or JSON, as well as getting data using HTTP protocol.</p>\
 <p>To call a REST or SOAP web service, <i>XML HTTP Transactions</i> have to be used as these web services are XML-based. To consume a JSON web service, <i>JSON HTTP Transactions</i> have to be used as it performs the conversion from the JSON data to the transaction output XML. To retrieve any other data in HTTP protocol (non XML-based REST web service, image or file getting, etc.), standard <i>HTTP Transaction</i> has to be used as its response is text-based.</p>\
 <p><strong>Note:</strong> <i>HTTP connector</i> supports OAuth authentication. To enable OAuth, you simply need to provide four variables to any kind of <i>HTTP transaction</i>: <code>__header_oAuthKey</code>, <code>__header_oAuthSecret</code>, <code>__header_oAuthToken</code> and <code>__header_oAuthTokenSecret</code>. For more information about OAuth in <i>HTTP connector</i>, refer to the following article in our Technical Blog: <i>http://www.convertigo.com/en/how-to/technical-blog/entry/using-oauth-with-convertigo-http-connector.html</i></p>
property.baseDir.display_name=Root path
property.baseDir.short_description=Defines the root path. | \
 <p>This is the first URI requested by the HTTP connector. Any other URI in the project is relative to this URI.</p>
property.https.display_name=Is HTTPS
property.https.short_description=Defines whether the connection is secured (HTTPS). | \
 <p>If set to <code>true</code>, the connection is SSL-based. Make sure the target SSL port (usually 443) is correctly set.</p>
property.server.display_name=Server
property.server.short_description=Defines the server name (or its IP address). | \
 <p>This property defines the DNS name or IP address of the target application server.</p>
property.port.display_name=Port
property.port.short_description=Defines the server port.
property.trustAllServerCertificates.display_name=Trust all certificates
property.trustAllServerCertificates.short_description=Defines whether trusted certificates must be checked. Reload the project to be effective. | \
 <p>In SSL mode, the server sends existing certificates to Convertigo. In most cases, set this setting to <code>true</code> to automatically trust all server certificates. If set to <code>false </code>, target server certificates must be installed in Convertigo.</p>
property.authUser.display_name=Basic/NTLM authentication user
property.authUser.short_description=Defines the user name for basic or NTLM authentication. | \
 <p>This property value is used as user name for basic or NTLM authentication.</p>\
 <p><strong>Note:</strong></p>\
 <ul>\
  <li>The type of authentication is chosen using the <b>Authentication type</b> property.</li>\
  <li>If you are using basic authentication setting, the target application should accept <code>WWW-Authenticate</code> header.</li>\
  <li>If you are using NTLM authentication setting, do not forget to also fill the <b>NTLM authentication domain</b> property.</li>\
 </ul>
property.authPassword.display_name=Basic/NTLM authentication password
property.authPassword.short_description=Defines the user's password for basic or NTLM authentication. | \
 <p>This property value is used as user password for basic or NTLM authentication.</p>\
 <p><strong>Note:</strong></p>\
 <ul>\
  <li>The type of authentication is chosen using the <b>Authentication type</b> property.</li>\
  <li>If you are using basic authentication setting, the target application should accept <code>WWW-Authenticate</code> header.</li>\
  <li>If you are using NTLM authentication setting, do not forget to also fill the <b>NTLM authentication domain</b> property.</li>\
 </ul>
property.authenticationType.display_name=Authentication type
property.authenticationType.short_description=Defines the authentication type between basic and NTLM authentications. | \
 <p>This property allows to define which type of authentication has to be used for the HTTP request. Default value is <code>Basic</code>.</p>\
 <p>If <b>Basic/NTLM authentication user</b> and <b>Basic/NTLM authentication password</b> properties are not filled, no authentication is performed.</p>\
 <p><strong>Note:</strong></p>\
 <ul>\
  <li>If you are using basic authentication setting, the target application should accept <code>WWW-Authenticate</code> header.</li>\
  <li>If you are using NTLM authentication setting, do not forget to also fill the <b>NTLM authentication domain</b> property.</li>\
 </ul>
property.NTLMAuthenticationDomain.display_name=NTLM authentication domain
property.NTLMAuthenticationDomain.short_description=Defines the NTLM authentication domain in case of NTLM authentication. | \
 <p>This property value is used as user domain for NTLM authentication.</p>\
 <p><strong>Note:</strong></p>\
 <ul>\
  <li>The type of authentication is chosen using the <b>Authentication type</b> property.</li>\
  <li>If you are using basic authentication setting, this property does not need to be filled.</li>\
 </ul>
property.httpHeaderForward.display_name=HTTP headers forwarding policy
property.httpHeaderForward.short_description=Defines the HTTP headers to forward and the policy to use to forward them. | \
 <p>This property allows forwarding HTTP headers from the client browser to the target application.</p>\
 <p>This property allows to define a list of HTTP headers to forward and, for each header, the forwarding policy to use. For each header, two columns have to be set:</p>\
 <ul>\
  <li><b>Header name</b>: defines the name of the header to forward,</li>\
  <li><b>Forwarding policy</b>: defines how to replace the header value when forwarding it.</li>\
 </ul>\
 <p>This second property can take the following values:</p>\
 <ul>\
  <li><code>Merge</code>: If the forwarded header exists, its value is merged with existing one. If the forwarded header doesn't exist, it is added.</li>\
  <li><code>Ignore</code>: If the forwarded header exists, its value is not replaced, it is ignored. If the forwarded header doesn't exist, it is added.</li>\
  <li><code>Replace</code>: Replaces all headers without any condition by forwarded values.</li>\
 </ul>\
 <p><strong>Note:</strong> A new HTTP header can be added to the list using the blue keyboard icon. The HTTP headers defined in the list can be ordered using the arrow up and arrow down buttons, or deleted using the red cross icon.</p>
property.urlEncodingCharset.display_name=Default URL charset encoding
property.urlEncodingCharset.short_description=Defines the default charset encoding to use for the transactions variable values sent as parameters in HTTP requests. | \
 <p>This property allows to define the charset encoding used to URL-encode the parameter values:</p>\
 <ul>\
  <li>GET parameters for the query string,</li>\
  <li>POST parameters in case of <code>application/x-www-form-urlencoded</code> content-type.</li>\
 </ul>\
 <p>Default value is <code>UTF-8</code>.</p>

