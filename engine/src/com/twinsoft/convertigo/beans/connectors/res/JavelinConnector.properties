# Copyright (c) 2001-2025 Convertigo SA.
# 
# This program  is free software; you  can redistribute it and/or
# Modify  it  under the  terms of the  GNU  Affero General Public
# License  as published by  the Free Software Foundation;  either
# version  3  of  the  License,  or  (at your option)  any  later
# version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS  FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public
# License along with this program;
# if not, see <http://www.gnu.org/licenses/>.

display_name=Javelin connector
short_description=Establishes connections with a legacy screen application (<span class="computer">IBM 3270</span>, <span class="computer">IBM 5250</span>, <span class="computer">Bull DKU 7107</span> or <span class="computer">Videotex</span>). | A <i>Javelin connector</i>, also named <i>Legacy connector</i>, represents a connection to a legacy system, based on a terminal emulation session. It allows Convertigo to connect to a mainframe application to perform transactions, that is to say navigate through legacy screens and either:\
<br/><br/>\
 \u2022 extract data into a proper XML document (CLI), <br/>\
 \u2022 on-the-fly webize legacy screens (CLP). <br/>\
<br/>\
<i>Javelin connector</i> is needed by Convertigo to connect to legacy applications. Once connected, all tasks (screen classes detection, data extraction, browsing, etc.) associated with the <i>Javelin connector</i> can be carried out as defined in the project thanks to several objects:\
<br/><br/>\
 \u2022 Screen classes, <br/>\
 \u2022 Criteria, <br/>\
 \u2022 Extraction rules, <br/>\
 \u2022 Javelin transactions, <br/>\
 \u2022 Screen classes handlers.<br/>
property.virtualServer.display_name=Virtual server
property.virtualServer.short_description=Defines the name of the virtual server to use (if left empty, the primary virtual server is used).
property.serviceCode.display_name=Connection address
property.serviceCode.short_description=Defines the connection address. | The connection address of a <i>Javelin connector</i> is composed of: \
<br/><br/>\
 \u2022 a <b>destination address</b>, as a hostname (or IP adress) and optionally a port, <br/>\
 \u2022 a <b>connection type</b>: most often <span class="computer">DIR</span> for direct connection, it can also take <span class="computer">EIC</span> or <span class="computer">TCP</span> as value, <br/>\
 \u2022 a <b>connection parameter</b>, optional.<br/>\
<br/>\
The <b>connection parameter</b> has different meanings according to the emulator: \
<br/><br/>\
 \u2022 3270: TN3270 device name, <br/>\
 \u2022 5250: TN5250 device name, <br/>\
 \u2022 DKU: MAILBOX, <br/>\
 \u2022 Minitel: service code (e.g. '3615SNCF'). <br/>\
<br/>\
It can be defined using an automatic numbering syntax managed by Convertigo engine: <span class="computer">PREFIX&lt;POOL:x-y/z&gt;SUFFIX</span>. <br/>\
This syntax will automatically generate a pool of "auto-numbered connection parameters", the <i>Javelin connector</i> will use one of them when a new connection starts. <br/>\
This syntax is composed of the following elements: \
<br/><br/>\
 \u2022 <span class="computer">PREFIX</span>: any prefix string to start the device name or service code, <br/>\
 \u2022 <span class="computer">&lt;POOL:x-y/z&gt;</span>: incremental number from x to y on z digits (for example <span class="computer">&lt;POOL:1-99/2&gt;</span> meaning an incremental number from 1 to 99 on 2 digits, i.e. from <span class="computer">01</span> to <span class="computer">99</span>), <br/>\
 \u2022 <span class="computer">SUFFIX</span>: any suffix string to end the device name or service code. <br/>\
<br/>\
<span class="orangetwinsoft">Notes:</span> \
<br/><br/>\
 \u2022 When a connection using an "auto-numbered connection parameter" is closed, the parameter is released in the pool and can be used again. <br/>\
 \u2022 This pool of "auto-numbered connection parameters" works like a round robin: when released, an "auto-numbered connection parameter" is queued at the end of the pool. It will be re-used only when all others have been used before. <br/>\
 \u2022 The pool of "auto-numbered connection parameters" will not work in Convertigo Studio context, only works in Convertigo server.<br/>
property.emulatorTechnology.display_name=Emulator
property.emulatorTechnology.short_description=Defines the emulator associated with the connector. | This property takes one of the following values: \
<br/><br/>\
 \u2022 <span class="computer">Bull DKU 7107</span>, <br/>\
 \u2022 <span class="computer">IBM 3270</span>, <br/>\
 \u2022 <span class="computer">IBM 5250 (AS/400)</span>, <br/>\
 \u2022 <span class="computer">Videotex (Minitel)</span>, <br/>\
 \u2022 <span class="computer">Unix (VT220)</span>.<br/>
property.connectionSyncCode.display_name=Connection synchronization code
property.connectionSyncCode.short_description=Defines the code to execute for synchronization purposes after connecting the emulator to the host. | This property allows the developer to program a code to be executed to synchronize the emulator after its connection, before executing any transaction. It uses JavaScript code as <i>Javelin transaction</i> core.
property.javelinLanguage.display_name=Language
property.javelinLanguage.short_description=Defines the language used within the emulator. | This property value has to be chosen amongst a list of available values.
property.sslEnabled.display_name=Enable SSL
property.sslEnabled.short_description=Defines whether a SSL connection should be used.
property.sslTrustAllServerCertificates.display_name=Trust all SSL server certificates
property.sslTrustAllServerCertificates.short_description=Defines if all server certificates should be automatically trusted for SSL connections.
property.ibmTerminalType.display_name=IBM terminal type
property.ibmTerminalType.short_description=Defines the IBM terminal type. | This property allows to override the value of the <b>TerminalType</b> configuration property. <br/>\
Depending on the <b>Emulator</b> property value, this overridden configuration property is present in different files, and this <b>IBM terminal type</b> property can take different values.<br/>\
For <span class="computer">IBM 3270</span> emulator: \
<br/><br/>\
 \u2022 the <b>TerminalType</b> configuration property is defined in "TerminalSNA.txt" configuration file, <br/>\
 \u2022 its default value is positioned to "IBM-3278", <br/>\
 \u2022 it can be overridden by <b>IBM terminal type</b> property to <span class="computer">IBM-3278</span> (corresponding to old 3270), <br/>\
 \u2022 or it can be overridden by <b>IBM terminal type</b> property to <span class="computer">IBM-3279</span> (default value for 3270). <br/>\
<br/>\
For <span class="computer">IBM 5250</span> emulator: \
<br/><br/>\
 \u2022 the <b>TerminalType</b> configuration property is defined in "TerminalAS400.txt" configuration file, <br/>\
 \u2022 its default value is positioned to "IBM-5250", <br/>\
 \u2022 it can be overridden by <b>IBM terminal type</b> property to <span class="computer">IBM-3179</span> (default value for 5250).<br/>
