# Copyright (c) 2001-2025 Convertigo SA.
# 
# This program  is free software; you  can redistribute it and/or
# Modify  it  under the  terms of the  GNU  Affero General Public
# License  as published by  the Free Software Foundation;  either
# version  3  of  the  License,  or  (at your option)  any  later
# version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS  FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public
# License along with this program;
# if not, see <http://www.gnu.org/licenses/>.

display_name=Step
short_description=Defines a step. | \
 <p>Steps are the building blocks of sequences. Each step:</p>\
 <ul>\
  <li>has its own functionality,</li>\
  <li>uses data from sources,</li>\
  <li>produces XML data that can be used as sources by other steps.</li>\
 </ul>
#property.tagName.display_name=Tag name
#property.tagName.short_description=Defines the name of the XML tag generated in the resulting XML.
property.isEnabled.display_name=Is active
property.isEnabled.short_description=Defines whether the step is active.
property.output.display_name=Output
property.output.short_description=Defines whether the XML generated by this step should be appended to the resulting XML. | \
 <p>Set this property to <code>true</code> to add the step's resulting XML to the sequence's output XML (default value for steps generating XML). Set this property to <code>false</code> to prevent the steps's XML result to appear in the sequence's output XML.</p>\
 <p>Setting this property to <code>false</code> does not prevent the step's generated XML from being used as a source by other steps.</p>
property.schemaDataType.display_name=Schema data type
property.schemaDataType.short_description=Defines which data type the step generates. | \
 <p>This property is filled with a schema data type name, which definition is known by Convertigo.</p>\
 <p>The property value is to be selected among a list of values that is dynamically created with standard schema types (for example <code>xsd:string</code>, <code>xsd:int</code>, etc.) and with the project's schema types (for example the schemas of data output by transactions or sequences and the schemas of data generated by each extraction rule).</p>
property.xmlSimpleTypeAffectation.display_name=Assigned XSD Simple type QName
property.xmlSimpleTypeAffectation.short_description=Defines the schema base type to assign as a type to this simple XML element. | \
 <p>This property allows to assign a simple XSD type to the simple XML element generated by this step. It can only be used when the step actually generates a simple XML element.</p>
property.xmlComplexTypeAffectation.display_name=Assigned XSD Complex type QName 
property.xmlComplexTypeAffectation.short_description=Defines a global schema Complex type to assign as a type to this structured XML element. | \
 <p>This property allows to assign an XSD Complex type to the structured XML element generated by this step.</p>\
 <p>The QName defined by this property can be:</p>\
 <ul>\
  <li>a new Complex type name: the Complex type will be created from this structure in the project's schema,</li>\
  <li>an already defined Complex type name: the existing Complex type is used and possibly enhanced by the structure generated by this XML element (if not identical): the Complex type will be a union of all XML structures using it.</li>\
 </ul>\
 <p>To use an already existing Complex type name, the popup editor displays all types available in the project's schema:</p>\
 <ul>\
  <li>in grey: all non editable schema types (Convertigo standard error schema, types imported through references, types of transactions, etc.),</li>\
  <li>in blue: all schema types dynamically generated from the project's sequences,</li>\
  <li>in green: all dynamic schema types explicitly named by <b>Assigned XSD Complex type QName </b> or <b>Assigned XSD Element ref QName</b> properties.</li>\
 </ul>
property.xmlElementRefAffectation.display_name=Assigned XSD Element ref QName
property.xmlElementRefAffectation.short_description=Defines a global schema Element to assign as a reference to this structured XML element. | \
 <p>This property allows to assign a referenced Element to the structured XML element generated by this step. The referenced Element and its corresponding XSD Complex type will also be created if non existing in the project's schema.</p>\
 <p>The QName defined by this property can be:</p>\
 <ul>\
  <li>a new referenced Element name: the referenced Element and the corresponding Complex type will be created from this structure in the project's schema,</li>\
  <li>an already defined referenced Element name: the existing referenced Element is used and its Complex type is possibly enhanced by the structure generated by this XML element (if not identical): the Complex type will be a union of all XML structures using it.</li>\
 </ul>\
 <p>To use an already existing referenced Element name, the popup editor displays all types available in the project's schema:</p>\
 <ul>\
  <li>in grey: all non editable schema types (Convertigo standard error schema, types imported through references, types of transactions, etc.),</li>\
  <li>in blue: all schema types dynamically generated from the project's sequences,</li>\
  <li>in green: all dynamic schema types explicitly named by <b>Assigned XSD Complex type QName </b> or <b>Assigned XSD Element ref QName</b> properties.</li>\
 </ul>

