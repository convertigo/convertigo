# Copyright (c) 2001-2025 Convertigo SA.
# 
# This program  is free software; you  can redistribute it and/or
# Modify  it  under the  terms of the  GNU  Affero General Public
# License  as published by  the Free Software Foundation;  either
# version  3  of  the  License,  or  (at your option)  any  later
# version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS  FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public
# License along with this program;
# if not, see <http://www.gnu.org/licenses/>.

display_name=Iterator
short_description=Defines a loop step iterating on XML nodes result from a source. | Also called <i>For Each</i> step, the <i>Iterator</i> step: \
<br/><br/>\
 \u2022 defines a source as input list to work on, i.e. a list of nodes from a previous step, used as a recurring element (for example table rows), <br/>\
 \u2022 iterates on each element of the specified source, <br/>\
 \u2022 contains child steps that are executed on each iteration, as other loop steps (for example, see "<i>jIterator</i>", "<i>jWhile</i>" and "<i>jDoWhile</i>" steps documentation and examples).<br/>\
<br/>\
In the iteration, child steps can access and use the current iterated element: \
<br/><br/>\
 \u2022 using a source pointing on the <i>Iterator</i> step itself, <br/>\
 \u2022 using the JavaScript variable named <span class="computer">item</span>, which is a Java Node object (item of the NodeList resulting from the input source). <br/>\
<br/>\
They also can access the current iteration index using the JavaScript variable named <span class="computer">index</span> updated on each iteration, which is an integer. <br/>\
<span class="orangetwinsoft">Note:</span> The current item value can be accessed using the following code statement: \
<br/><br/>\
 \u2022 <span class="computer">item.getTextContent()</span> if the Node is of Text or Attribute type, <br/>\
 \u2022 <span class="computer">item.getNodeValue()</span> if the Node is of Element type. <br/>
property.condition.display_name=Stopping index
property.condition.short_description=Defines the exclusive index to which the <i>Iterator</i> should stop to iterate. | Intended mostly for testing purposes, this (optional) parameter limits the number of times the iterator loops if this last index is reached. <br/>\
This property is a JavaScript expression that is evaluated during the sequence execution. By default, it is not filled, so the <i>Iterator</i> loops on each node from the source.
property.sourceDefinition.display_name=Source
property.sourceDefinition.short_description=Defines the source list to iterate on. | This property allows defining a list of nodes from a previous step on which current step works. <br/>\
A <b>source</b> is defined as a reference on a step previously existing in the parent sequence, associated with an XPath applied on the step's result DOM. At runtime, the XPath is applied on the step's current execution result XML and extracts a list of XML nodes resulting from this execution. <br/>\
If the XPath doesn't match or if the source is left blank, the step has no data to work on: the loop does not execute its child steps and the parent sequence execution continues.
property.startIndex.display_name=Starting index
property.startIndex.short_description=Defines the index from which the <i>Iterator</i> should start to iterate. | In the case you do not want to start an iteration at the first item (index <span class="computer">0</span>), you can specify a starting index in this property. <br/>\
This property is a JavaScript expression that is evaluated during the sequence execution. By default, it is set to <span class="computer">0</span> for starting at the first item of the source list. <br/>\
If the defined starting index does not exist in the source list, the loop does not execute its child steps and the parent sequence execution continues. 
