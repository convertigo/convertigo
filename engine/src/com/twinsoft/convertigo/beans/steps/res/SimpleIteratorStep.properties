# Copyright (c) 2001-2025 Convertigo SA.
# 
# This program  is free software; you  can redistribute it and/or
# Modify  it  under the  terms of the  GNU  Affero General Public
# License  as published by  the Free Software Foundation;  either
# version  3  of  the  License,  or  (at your option)  any  later
# version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS  FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public
# License along with this program;
# if not, see <http://www.gnu.org/licenses/>.

display_name=jIterator
short_description=Defines a loop step iterating on list items result from a JavaScript expression. | \
 <p>Also called <i>For Each</i> step, the <i>jIterator</i> step:</p>\
 <ul>\
  <li>defines a JavaScript expression as input list to work on, i.e. the name of a multi-valued variable, the name of a defined JavaScript Array, or the name of a NodeList variable created by a previous <i>jSource</i> step, etc.,</li>\
  <li>iterates on each item of the specified input list,</li>\
  <li>contains child steps that are executed on each iteration, as other loop steps (for example see "<i>Iterator</i>", "<i>jWhile</i>" and "<i>jDoWhile</i>" steps documentation and examples).</li>\
 </ul>\
 <p>In the iteration, child steps can access and use:</p>\
 <ul>\
  <li>the current iterated item through a JavaScript variable named <code>item</code>, which type depends on the iterated Array or NodeList,</li>\
  <li>the current iteration index through a JavaScript variable named <code>index</code>, which is an integer.</li>\
 </ul>
property.condition.display_name=Stopping index
property.condition.short_description=Defines the exclusive index to which the <i>Iterator</i> should stop to iterate. | \
 <p>Intended mostly for testing purposes, this (optional) parameter limits the number of times the iterator loops if this last index is reached.</p>\
 <p>By default, it is not filled, so the <i>jIterator</i> loops on each item from the list.</p>
property.expression.display_name=Expression
property.expression.short_description=Defines the expression evaluated to give the list to iterate on. | \
 <p>This property is a JavaScript expression that is evaluated during the sequence execution and gives a list of items (JavaScript <code>Array</code> or <code>NodeList</code>).</p>\
 <p>If the expression doesn't output a list object or if the expression is left blank, the step has no data to work on: the loop does not execute its child steps and the parent sequence execution continues</p>
property.startIndex.display_name=Starting index
property.startIndex.short_description=Defines the index from which the <i>jIterator</i> should start to iterate. | \
 <p>In the case you do not want to start an iteration at the first item (index <code>0</code>), you can specify a starting index in this property.</p>\
 <p>This property is a JavaScript expression that is evaluated during the sequence execution. By default, it is set to <code>0</code> for starting at the first item of the input list.</p>\
 <p>If the defined starting index does not exist in the input list, the loop does not execute its child steps and the parent sequence execution continues.</p>

