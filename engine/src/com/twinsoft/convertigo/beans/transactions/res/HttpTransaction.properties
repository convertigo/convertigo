# Copyright (c) 2001-2025 Convertigo SA.
# 
# This program  is free software; you  can redistribute it and/or
# Modify  it  under the  terms of the  GNU  Affero General Public
# License  as published by  the Free Software Foundation;  either
# version  3  of  the  License,  or  (at your option)  any  later
# version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS  FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public
# License along with this program;
# if not, see <http://www.gnu.org/licenses/>.

display_name=HTTP transaction
short_description=Defines an HTTP transaction. | An <i>HTTP transaction</i> is a Convertigo transaction based on HTTP requests. It allows to perform an HTTP request and get the response back. <br/>\
Unlike <i>XML HTTP transaction</i>, <i>JSON HTTP transaction</i> or <i>Download HTTP transaction</i>, simple <i>HTTP transaction</i> receives text-based HTTP responses. It is used to retrieve any data in HTTP protocol (non XML-based REST web service, image or file getting, etc.). <br/>\
<span class="orangetwinsoft">Note:</span> <i>HTTP connector</i> supports OAuth authentication. To enable OAuth, you simply need to provide four variables to any kind of <i>HTTP transaction</i>: <span class="computer">__header_oAuthKey</span>, <span class="computer">__header_oAuthSecret</span>, <span class="computer">__header_oAuthToken</span> and <span class="computer">__header_oAuthTokenSecret</span>. For more information about OAuth in <i>HTTP connector</i>, refer to the following article in our Technical Blog: <i>http://www.convertigo.com/en/how-to/technical-blog/entry/using-oauth-with-convertigo-http-connector.html</i><br/>\
Dynamic parameter exists:<br/>\
 \u2022 <span class="computer">__header_[name]</span>: dynamically add a header <b>name</b>,<br/>\
 \u2022 <span class="computer">__GET_[name]</span>: dynamically add a GET parameter <b>name</b>,<br/>\
 \u2022 <span class="computer">__POST_[name]</span>: dynamically add a POST parameter <b>name</b>,<br/>
property.dataEncoding.display_name=HTTP data encoding
property.dataEncoding.short_description=Defines the data encoding to use for encoding the data received through the HTTP connector. | HTTP data retrieved through the <i>HTTP connector</i> can be one of of the following types: \
<br/><br/>\
 \u2022 <span class="computer">string</span> type: string data are not encoded,<br/>\
 \u2022 <span class="computer">binary</span> type: binary data are encoded in <span class="computer">Base64</span>.<br/>
property.dataStringCharset.display_name=HTTP string charset
property.dataStringCharset.short_description=Defines the charset use to decode the data string received through the HTTP connector. | Works only for 'HTTP data encoding' in 'string' mode. If blank, the charset is retrieve from the response header if any else 'ascii' is used.
property.responseInCDATA.display_name=HTTP response in CDATA
property.responseInCDATA.short_description=Defines if the string result must be in a CDATA under the root Element or in a simple TextNode. | If 'true', CDATA is used and the string content isn't modified. If 'false', TextNode is used and the string content is automatically XML encoded.  