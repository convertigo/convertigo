# Copyright (c) 2001-2025 Convertigo SA.
# 
# This program  is free software; you  can redistribute it and/or
# Modify  it  under the  terms of the  GNU  Affero General Public
# License  as published by  the Free Software Foundation;  either
# version  3  of  the  License,  or  (at your option)  any  later
# version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS  FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public
# License along with this program;
# if not, see <http://www.gnu.org/licenses/>.

display_name=Javelin transaction
short_description=Defines an emulator-based transaction. | As regards legacy applications, Convertigo's basic principle is to:\
<br/><br/>\
 \u2022 navigate through legacy screens,<br/>\
 \u2022 detect defined screen classes,<br/>\
 \u2022 extract legacy screen data in accordance with screen class-specific extraction rules,<br/>\
 \u2022 treat extracted data in order to generate an XML document structured as required.<br/>\
<br/>\
This process defines the notion of transaction. A transaction can be defined as a series of steps called statements. Statements are signaled by events. In other words, a transaction is made up of a set of event handlers, also called screen class handlers.<br/>\
Screen transactions are written by the Convertigo programmer in plain JavaScript language. The programmer can therefore leverage the full power of the language while manipulating specific Convertigo objects, like <span class="computer">javelin</span> for accessing legacy screen funtionnality, <span class="computer">context</span> for accessing Convertigo useful information, <span class="computer">dom</span> for extended use and XML generation customization.
property.timeoutForConnect.display_name=Connection timeout
property.timeoutForConnect.short_description=Defines the timeout for connecting to the host (in ms).
property.timeoutForDataStable.display_name=Data stable timeout
property.timeoutForDataStable.short_description=Defines the timeout for detecting stable screen (in ms).
property.dataStableThreshold.display_name=Datastable threshold
property.dataStableThreshold.short_description=Defines the inactivity time (in ms) before considering a screen fully built. | The datastable threshold is therefore lower than the stable screen waiting time (Videotex emulator: duration of net inactivity; SNA emulator: inactivity timeout for OIA indicator).
property.onlyOnePage.display_name=Only one page
property.onlyOnePage.short_description=Defines whether data should be accumulated in one single page.
property.executeExtractionRulesInPanels.display_name=Execute extraction rules in panels
property.executeExtractionRulesInPanels.short_description=Defines whether extraction rules should be executed in panels.
property.removeBlocksNode.display_name=Remove 'blocks' nodes
property.removeBlocksNode.short_description=Defines whether encompassing "blocks" node should be removed (useful in web services context).
property.includedTagAttributes.display_name=XML attributes to include
property.includedTagAttributes.short_description=Defines, when applicable, the XML attributes to be included in the generated XML document. | These attributes are:\
<br/><br/>\
 \u2022 Definition attributes: <span class="computer">name</span>, <span class="computer">type</span>;<br/>\
 \u2022 Position attributes: <span class="computer">line</span>, <span class="computer">column</span>;<br/>\
 \u2022 Color attributes: <span class="computer">foreground</span>, <span class="computer">background</span>;<br/>\
 \u2022 Decoration attributes: <span class="computer">bold</span>, <span class="computer">underline</span>, <span class="computer">reverse</span>, <span class="computer">blink</span>;<br/>\
 \u2022 Optional attributes.<br/>
