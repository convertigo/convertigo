# Copyright (c) 2001-2025 Convertigo SA.
# 
# This program  is free software; you  can redistribute it and/or
# Modify  it  under the  terms of the  GNU  Affero General Public
# License  as published by  the Free Software Foundation;  either
# version  3  of  the  License,  or  (at your option)  any  later
# version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS  FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public
# License along with this program;
# if not, see <http://www.gnu.org/licenses/>.

display_name=HTTP single-valued variable
short_description=Defines a single-valued variable for an HTTP-based transaction. | An <i>HTTP single-valued variable</i> declares a variable which accepts a unique value to an HTTP-based transaction. <br/>\
This variable is dedicated to HTTP-based transactions only: \
<br/><br/>\
 \u2022 <i>HTTP transaction</i>, <br/>\
 \u2022 <i>XML HTTP transaction</i>, <br/>\
 \u2022 <i>JSON HTTP transaction</i>, <br/>\
 \u2022 <i>HTML transaction</i>. <br/>\
<br/>\
This variable object allows defining HTTP request parameter through the <b>HTTP name</b> and <b>HTTP method</b> properties. <br/>\
It can define a default value, specified in the <b>Default value</b> property, that is used as HTTP parameter value if no value is found for this variable. <br/>\
At runtime, the HTTP parameter value is calculated by Convertigo through the following steps: \
<br/><br/>\
 \u2022 the value is received in the request to the transaction, <br/>\
 \u2022 if no value is received for this variable, the JavaScript value of the variable is chosen, if a variable of the same name exists in the JavaScript scope of current context, <br/>\
 \u2022 if no JavaScript value is defined, the context value of the variable is chosen, if a variable of the same name is stored in current context, <br/>\
 \u2022 if none of the previous methods gives a value, the default value is used, <br/>\
 \u2022 if no default value is specified, the variable is not defined and an Exception can be thrown when trying to access its value in the core of the transaction. <br/>\
<br/>\
<span class="orangetwinsoft">Notes:</span> \
<br/><br/>\
 \u2022 In Convertigo Studio, when an <i>HTTP single-valued variable</i> is created in a transaction/sequence, it can be easily replaced by an <i>HTTP multi-valued variable</i>, using the right-click menu on the variable and choosing the option <b>Change to</b> &gt; <b>MultiValued variable</b>. <br/>\
 \u2022 <i>HTTP connector</i> supports OAuth authentication. To enable OAuth, you simply need to provide four variables to any kind of <i>HTTP transaction</i>: <span class="computer">__header_oAuthKey</span>, <span class="computer">__header_oAuthSecret</span>, <span class="computer">__header_oAuthToken</span> and <span class="computer">__header_oAuthTokenSecret</span>. For more information about OAuth in <i>HTTP connector</i>, refer to the following article in our Technical Blog: <i>http://www.convertigo.com/en/how-to/technical-blog/entry/using-oauth-with-convertigo-http-connector.html</i>  <br/> \
 \u2022 To send an <i>HTTP Message Body</i>, add the <span class="computer">__body</span> and the <span class="computer">__contentType</span> reserved variables to an <b>POST</b> or <b>PUT</b> HTTP-based transaction. If the <span class="computer">Content-Type</span> is set to <span class="computer">application/json</span> and the <span class="computer">__body</span> source is automatically converted to a JSON string When setting <span class="computer">none</span> as the <i>Do File Upload Mode</i>, the data will be sent as text to the target server: <span class="computer">__body=&lt;user&gt;&lt;id&gt;000457&lt;/id&gt;&lt;name&gt;username&lt;/name&gt;&lt;/user&gt; __contentType=text/xml</span>. When setting <span class="computer">multipartFormData</span> as the <i>Do File Upload Mode</i>, the data will be uploaded as file to the target server: <span class="computer">__body=.//MyLocalData.xml __contentType=text/xml</span>. In this case the value of the <span class="computer">__body</span> is the path of the file to upload. <br/>
property.httpMethod.display_name=HTTP method
property.httpMethod.short_description=Defines the HTTP method to use for this variable. | This property allows choosing which HTTP method has to be used to send the variable in the HTTP request. The following values are available: \
<br/><br/>\
 \u2022 <span class="computer">GET</span>: the transaction is executed as an HTTP GET request and the variable is added to the query string as follows: <span class="computer">?&lt;initial_query_string&gt;&amp;&lt;variable_name&gt;=&lt;variable_value&gt;</span>. <br/>\
 \u2022 <span class="computer">POST</span>: the variable is added to the data sent in the HTTP request as a standard <span class="computer">POST FORM</span>. <br/>\
<br/>\
<span class="computer">GET</span> and <span class="computer">POST</span> method variables can be mixed in a same transaction. If at least one <span class="computer">POST</span> variable is used, the transaction's HTTP verb is overridden to <span class="computer">POST</span> by Convertigo.
property.httpName.display_name=HTTP name
property.httpName.short_description=Defines the HTTP parameter name. | This property allows defining the name of the HTTP variable sent in the request by Convertigo executing the parent transaction. <br/>\
If the HTTP-based transaction emulates a form submission, this property can match the <span class="computer">name</span> attribute of an HTML input field. If the HTTP-based transaction emulates a resource access by URL, this property can match one of the variables names from the query string (between "<span class="computer">&amp;</span>" and "<span class="computer">=</span>" characters).
property.doFileUploadMode.display_name=Do File Upload Mode
property.doFileUploadMode.short_description=Enable and select the mode to perform a file upload (POST or PUT). | This property indicates if the value is a filepath of an existing file and the way to handle it. Works only for POST or PUT http transaction.\
<br/><br/>\
 \u2022 <span class="computer">none</span>: default mode, doesn't process the value as a filepath. <br/>\
 \u2022 <span class="computer">base64</span>: (only text/xml) substitute the variable value with the file content encoded in base64 (can produce huge data).<br/>\
 \u2022 <span class="computer">MTOM</span>: (only text/xml) substitute the variable value with a &lt;xop:Include&gt; element that refer to the MTOM attachment part. If their is one MTOM variable, the request is send as MTOM.<br/>\
 \u2022 <span class="computer">multipartFormData</span>: (only application/x-www-form-urlencoded) the request send a multipart/formData Content-Type and send the file as a file part.<br/>\
<br/><span class="orangetwinsoft">Note:</span> if the variable name is <span class="computer">__body</span> and set with <span class="computer">multipartFormData</span>, the file content is sent as body.<br/>\
<br/>\
<br/>\Relative paths starting with:\
<br/><br/>\
 \u2022 <span class="computer">./</span> are relative to Convertigo workspace,<br/>\
 \u2022 <span class="computer">.//</span> are relative to current project folder. <br/>
property.doFileUploadContentType.display_name=Do File Upload ContentType
property.doFileUploadContentType.short_description=Set the ContentType of the file in case of multipartFormData. | This property set the ContentType of the file in case of <span class="computer">Do File Upload Mode</span> is <span class="computer">multipartFormData</span>. <br/>\
With an empty value, the ContentType is extracted from the file extension.
property.doFileUploadCharset.display_name=Do File Upload Charset
property.doFileUploadCharset.short_description=Set the Charset of the file in case of multipartFormData. | This property set the ContentType of the file in case of <span class="computer">Do File Upload Mode</span> is <span class="computer">multipartFormData</span>. <br/>\
This property have sense for ContentType text/plain. 