# Copyright (c) 2001-2025 Convertigo SA.
# 
# This program  is free software; you  can redistribute it and/or
# Modify  it  under the  terms of the  GNU  Affero General Public
# License  as published by  the Free Software Foundation;  either
# version  3  of  the  License,  or  (at your option)  any  later
# version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS  FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public
# License along with this program;
# if not, see <http://www.gnu.org/licenses/>.

display_name=HTTP single-valued variable
short_description=Defines a single-valued variable for an HTTP-based transaction. | \
 <p>An <i>HTTP single-valued variable</i> declares a variable which accepts a unique value to an HTTP-based transaction.</p>\
 <p>This variable is dedicated to HTTP-based transactions only:</p>\
 <ul>\
  <li><i>HTTP transaction</i>,</li>\
  <li><i>XML HTTP transaction</i>,</li>\
  <li><i>JSON HTTP transaction</i>,</li>\
  <li><i>HTML transaction</i>.</li>\
 </ul>\
 <p>This variable object allows defining HTTP request parameter through the <b>HTTP name</b> and <b>HTTP method</b> properties.</p>\
 <p>It can define a default value, specified in the <b>Default value</b> property, that is used as HTTP parameter value if no value is found for this variable.</p>\
 <p>At runtime, the HTTP parameter value is calculated by Convertigo through the following steps:</p>\
 <ul>\
  <li>the value is received in the request to the transaction,</li>\
  <li>if no value is received for this variable, the JavaScript value of the variable is chosen, if a variable of the same name exists in the JavaScript scope of current context,</li>\
  <li>if no JavaScript value is defined, the context value of the variable is chosen, if a variable of the same name is stored in current context,</li>\
  <li>if none of the previous methods gives a value, the default value is used,</li>\
  <li>if no default value is specified, the variable is not defined and an Exception can be thrown when trying to access its value in the core of the transaction.</li>\
 </ul>\
 <p><strong>Note:</strong></p>\
 <ul>\
  <li>In Convertigo Studio, when an <i>HTTP single-valued variable</i> is created in a transaction/sequence, it can be easily replaced by an <i>HTTP multi-valued variable</i>, using the right-click menu on the variable and choosing the option <b>Change to</b> &gt; <b>MultiValued variable</b>.</li>\
  <li><i>HTTP connector</i> supports OAuth authentication. To enable OAuth, you simply need to provide four variables to any kind of <i>HTTP transaction</i>: <code>__header_oAuthKey</code>, <code>__header_oAuthSecret</code>, <code>__header_oAuthToken</code> and <code>__header_oAuthTokenSecret</code>. For more information about OAuth in <i>HTTP connector</i>, refer to the following article in our Technical Blog: <i>http://www.convertigo.com/en/how-to/technical-blog/entry/using-oauth-with-convertigo-http-connector.html</i></li>\
  <li>To send an <i>HTTP Message Body</i>, add the <code>__body</code> and the <code>__contentType</code> reserved variables to an <b>POST</b> or <b>PUT</b> HTTP-based transaction. If the <code>Content-Type</code> is set to <code>application/json</code> and the <code>__body</code> source is automatically converted to a JSON string When setting <code>none</code> as the <i>Do File Upload Mode</i>, the data will be sent as text to the target server: <code>__body=&lt;user&gt;&lt;id&gt;000457&lt;/id&gt;&lt;name&gt;username&lt;/name&gt;&lt;/user&gt; __contentType=text/xml</code>. When setting <code>multipartFormData</code> as the <i>Do File Upload Mode</i>, the data will be uploaded as file to the target server: <code>__body=.//MyLocalData.xml __contentType=text/xml</code>. In this case the value of the <code>__body</code> is the path of the file to upload.</li>\
 </ul>
property.httpMethod.display_name=HTTP method
property.httpMethod.short_description=Defines the HTTP method to use for this variable. | \
 <p>This property allows choosing which HTTP method has to be used to send the variable in the HTTP request. The following values are available:</p>\
 <ul>\
  <li><code>GET</code>: the transaction is executed as an HTTP GET request and the variable is added to the query string as follows: <code>?&lt;initial_query_string&gt;&amp;&lt;variable_name&gt;=&lt;variable_value&gt;</code>.</li>\
  <li><code>POST</code>: the variable is added to the data sent in the HTTP request as a standard <code>POST FORM</code>.</li>\
 </ul>\
 <code>GET</code> and <code>POST</code> method variables can be mixed in a same transaction. If at least one <code>POST</code> variable is used, the transaction's HTTP verb is overridden to <code>POST</code> by Convertigo.
property.httpName.display_name=HTTP name
property.httpName.short_description=Defines the HTTP parameter name. | \
 <p>This property allows defining the name of the HTTP variable sent in the request by Convertigo executing the parent transaction.</p>\
 <p>If the HTTP-based transaction emulates a form submission, this property can match the <code>name</code> attribute of an HTML input field. If the HTTP-based transaction emulates a resource access by URL, this property can match one of the variables names from the query string (between "<code>&amp;</code>" and "<code>=</code>" characters).</p>
property.doFileUploadMode.display_name=Do File Upload Mode
property.doFileUploadMode.short_description=Enable and select the mode to perform a file upload (POST or PUT). | \
 <p>This property indicates if the value is a filepath of an existing file and the way to handle it. Works only for POST or PUT http transaction.</p>\
 <ul>\
  <li><code>none</code>: default mode, doesn't process the value as a filepath.</li>\
  <li><code>base64</code>: (only text/xml) substitute the variable value with the file content encoded in base64 (can produce huge data).</li>\
  <li><code>MTOM</code>: (only text/xml) substitute the variable value with a &lt;xop:Include&gt; element that refer to the MTOM attachment part. If their is one MTOM variable, the request is send as MTOM.</li>\
  <li><code>multipartFormData</code>: (only application/x-www-form-urlencoded) the request send a multipart/formData Content-Type and send the file as a file part.</li>\
 </ul>\
 <p><strong>Note:</strong> if the variable name is <code>__body</code> and set with <code>multipartFormData</code>, the file content is sent as body.</p>\
 <p>\Relative paths starting with:</p>\
 <ul>\
  <li><code>./</code> are relative to Convertigo workspace,</li>\
  <li><code>.//</code> are relative to current project folder.</li>\
 </ul>
property.doFileUploadContentType.display_name=Do File Upload ContentType
property.doFileUploadContentType.short_description=Set the ContentType of the file in case of multipartFormData. | \
 <p>This property set the ContentType of the file in case of <code>Do File Upload Mode</code> is <code>multipartFormData</code>.</p>\
 <p>With an empty value, the ContentType is extracted from the file extension.</p>
property.doFileUploadCharset.display_name=Do File Upload Charset
property.doFileUploadCharset.short_description=Set the Charset of the file in case of multipartFormData. | \
 <p>This property set the ContentType of the file in case of <code>Do File Upload Mode</code> is <code>multipartFormData</code>.</p>\
 <p>This property have sense for ContentType text/plain.</p>
